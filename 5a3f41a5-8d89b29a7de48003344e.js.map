{"version":3,"file":"5a3f41a5-8d89b29a7de48003344e.js","mappings":"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","sources":["webpack://vanhaohoang.github.io/./node_modules/@reactflow/core/dist/esm/index.js"],"sourcesContent":["import { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { createContext, useContext, useMemo, memo, useRef, useState, useEffect, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport { useStore as useStore$1, createStore } from 'zustand';\nimport { shallow } from 'zustand/shallow';\nimport { drag } from 'd3-drag';\nimport { select, pointer } from 'd3-selection';\nimport { zoomIdentity, zoom } from 'd3-zoom';\nimport { createPortal } from 'react-dom';\n\nconst StoreContext = createContext(null);\nconst Provider$1 = StoreContext.Provider;\n\nconst errorMessages = {\n    error001: () => '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001',\n    error002: () => \"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.\",\n    error003: (nodeType) => `Node type \"${nodeType}\" not found. Using fallback type \"default\".`,\n    error004: () => 'The React Flow parent container needs a width and a height to render the graph.',\n    error005: () => 'Only child nodes can use a parent extent.',\n    error006: () => \"Can't create edge. An edge needs a source and a target.\",\n    error007: (id) => `The old edge with id=${id} does not exist.`,\n    error009: (type) => `Marker type \"${type}\" doesn't exist.`,\n    error008: (sourceHandle, edge) => `Couldn't create edge for ${!sourceHandle ? 'source' : 'target'} handle id: \"${!sourceHandle ? edge.sourceHandle : edge.targetHandle}\", edge id: ${edge.id}.`,\n    error010: () => 'Handle: No node id found. Make sure to only use a Handle inside a custom Node.',\n    error011: (edgeType) => `Edge type \"${edgeType}\" not found. Using fallback type \"default\".`,\n};\n\nconst zustandErrorMessage = errorMessages['error001']();\nfunction useStore(selector, equalityFn) {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useStore$1(store, selector, equalityFn);\n}\nconst useStoreApi = () => {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useMemo(() => ({\n        getState: store.getState,\n        setState: store.setState,\n        subscribe: store.subscribe,\n        destroy: store.destroy,\n    }), [store]);\n};\n\nconst selector$g = (s) => (s.userSelectionActive ? 'none' : 'all');\nfunction Panel({ position, children, className, style, ...rest }) {\n    const pointerEvents = useStore(selector$g);\n    const positionClasses = `${position}`.split('-');\n    return (jsx(\"div\", { className: cc(['react-flow__panel', className, ...positionClasses]), style: { ...style, pointerEvents }, ...rest, children: children }));\n}\n\nfunction Attribution({ proOptions, position = 'bottom-right' }) {\n    if (proOptions?.hideAttribution) {\n        return null;\n    }\n    return (jsx(Panel, { position: position, className: \"react-flow__attribution\", \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev\", children: jsx(\"a\", { href: \"https://reactflow.dev\", target: \"_blank\", rel: \"noopener noreferrer\", \"aria-label\": \"React Flow attribution\", children: \"React Flow\" }) }));\n}\n\nconst EdgeText = ({ x, y, label, labelStyle = {}, labelShowBg = true, labelBgStyle = {}, labelBgPadding = [2, 4], labelBgBorderRadius = 2, children, className, ...rest }) => {\n    const edgeRef = useRef(null);\n    const [edgeTextBbox, setEdgeTextBbox] = useState({ x: 0, y: 0, width: 0, height: 0 });\n    const edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n    useEffect(() => {\n        if (edgeRef.current) {\n            const textBbox = edgeRef.current.getBBox();\n            setEdgeTextBbox({\n                x: textBbox.x,\n                y: textBbox.y,\n                width: textBbox.width,\n                height: textBbox.height,\n            });\n        }\n    }, [label]);\n    if (typeof label === 'undefined' || !label) {\n        return null;\n    }\n    return (jsxs(\"g\", { transform: `translate(${x - edgeTextBbox.width / 2} ${y - edgeTextBbox.height / 2})`, className: edgeTextClasses, visibility: edgeTextBbox.width ? 'visible' : 'hidden', ...rest, children: [labelShowBg && (jsx(\"rect\", { width: edgeTextBbox.width + 2 * labelBgPadding[0], x: -labelBgPadding[0], y: -labelBgPadding[1], height: edgeTextBbox.height + 2 * labelBgPadding[1], className: \"react-flow__edge-textbg\", style: labelBgStyle, rx: labelBgBorderRadius, ry: labelBgBorderRadius })), jsx(\"text\", { className: \"react-flow__edge-text\", y: edgeTextBbox.height / 2, dy: \"0.3em\", ref: edgeRef, style: labelStyle, children: label }), children] }));\n};\nvar EdgeText$1 = memo(EdgeText);\n\nconst getDimensions = (node) => ({\n    width: node.offsetWidth,\n    height: node.offsetHeight,\n});\nconst clamp = (val, min = 0, max = 1) => Math.min(Math.max(val, min), max);\nconst clampPosition = (position = { x: 0, y: 0 }, extent) => ({\n    x: clamp(position.x, extent[0][0], extent[1][0]),\n    y: clamp(position.y, extent[0][1], extent[1][1]),\n});\n// returns a number between 0 and 1 that represents the velocity of the movement\n// when the mouse is close to the edge of the canvas\nconst calcAutoPanVelocity = (value, min, max) => {\n    if (value < min) {\n        return clamp(Math.abs(value - min), 1, 50) / 50;\n    }\n    else if (value > max) {\n        return -clamp(Math.abs(value - max), 1, 50) / 50;\n    }\n    return 0;\n};\nconst calcAutoPan = (pos, bounds) => {\n    const xMovement = calcAutoPanVelocity(pos.x, 35, bounds.width - 35) * 20;\n    const yMovement = calcAutoPanVelocity(pos.y, 35, bounds.height - 35) * 20;\n    return [xMovement, yMovement];\n};\nconst getHostForElement = (element) => element.getRootNode?.() || window?.document;\nconst getBoundsOfBoxes = (box1, box2) => ({\n    x: Math.min(box1.x, box2.x),\n    y: Math.min(box1.y, box2.y),\n    x2: Math.max(box1.x2, box2.x2),\n    y2: Math.max(box1.y2, box2.y2),\n});\nconst rectToBox = ({ x, y, width, height }) => ({\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n});\nconst boxToRect = ({ x, y, x2, y2 }) => ({\n    x,\n    y,\n    width: x2 - x,\n    height: y2 - y,\n});\nconst nodeToRect = (node) => ({\n    ...(node.positionAbsolute || { x: 0, y: 0 }),\n    width: node.width || 0,\n    height: node.height || 0,\n});\nconst getBoundsOfRects = (rect1, rect2) => boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\nconst getOverlappingArea = (rectA, rectB) => {\n    const xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n    const yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n    return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isRectObject = (obj) => isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nconst isNumeric = (n) => !isNaN(n) && isFinite(n);\nconst internalsSymbol = Symbol.for('internals');\n// used for a11y key board controls for nodes and edges\nconst elementSelectionKeys = ['Enter', ' ', 'Escape'];\nconst devWarn = (id, message) => {\n    if (process.env.NODE_ENV === 'development') {\n        console.warn(`[React Flow]: ${message} Help: https://reactflow.dev/error#${id}`);\n    }\n};\nconst isReactKeyboardEvent = (event) => 'nativeEvent' in event;\nfunction isInputDOMNode(event) {\n    const kbEvent = isReactKeyboardEvent(event) ? event.nativeEvent : event;\n    // using composed path for handling shadow dom\n    const target = (kbEvent.composedPath?.()?.[0] || event.target);\n    const isInput = ['INPUT', 'SELECT', 'TEXTAREA'].includes(target?.nodeName) || target?.hasAttribute('contenteditable');\n    // when an input field is focused we don't want to trigger deletion or movement of nodes\n    return isInput || !!target?.closest('.nokey');\n}\nconst isMouseEvent = (event) => 'clientX' in event;\nconst getEventPosition = (event, bounds) => {\n    const isMouseTriggered = isMouseEvent(event);\n    const evtX = isMouseTriggered ? event.clientX : event.touches?.[0].clientX;\n    const evtY = isMouseTriggered ? event.clientY : event.touches?.[0].clientY;\n    return {\n        x: evtX - (bounds?.left ?? 0),\n        y: evtY - (bounds?.top ?? 0),\n    };\n};\n\nconst BaseEdge = ({ id, path, labelX, labelY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth = 20, }) => {\n    return (jsxs(Fragment, { children: [jsx(\"path\", { id: id, style: style, d: path, fill: \"none\", className: \"react-flow__edge-path\", markerEnd: markerEnd, markerStart: markerStart }), interactionWidth && (jsx(\"path\", { d: path, fill: \"none\", strokeOpacity: 0, strokeWidth: interactionWidth, className: \"react-flow__edge-interaction\" })), label && isNumeric(labelX) && isNumeric(labelY) ? (jsx(EdgeText$1, { x: labelX, y: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius })) : null] }));\n};\nBaseEdge.displayName = 'BaseEdge';\n\nconst getMarkerEnd = (markerType, markerEndId) => {\n    if (typeof markerEndId !== 'undefined' && markerEndId) {\n        return `url(#${markerEndId})`;\n    }\n    return typeof markerType !== 'undefined' ? `url(#react-flow__${markerType})` : 'none';\n};\nfunction getMouseHandler$1(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const edge = getState().edges.find((e) => e.id === id);\n            if (edge) {\n                handler(event, { ...edge });\n            }\n        };\n}\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter({ sourceX, sourceY, targetX, targetY, }) {\n    const xOffset = Math.abs(targetX - sourceX) / 2;\n    const centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n    const yOffset = Math.abs(targetY - sourceY) / 2;\n    const centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n    return [centerX, centerY, xOffset, yOffset];\n}\nfunction getBezierEdgeCenter({ sourceX, sourceY, targetX, targetY, sourceControlX, sourceControlY, targetControlX, targetControlY, }) {\n    // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n    // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n    const centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n    const centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n    const offsetX = Math.abs(centerX - sourceX);\n    const offsetY = Math.abs(centerY - sourceY);\n    return [centerX, centerY, offsetX, offsetY];\n}\n\nvar ConnectionMode;\n(function (ConnectionMode) {\n    ConnectionMode[\"Strict\"] = \"strict\";\n    ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n    PanOnScrollMode[\"Free\"] = \"free\";\n    PanOnScrollMode[\"Vertical\"] = \"vertical\";\n    PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n    SelectionMode[\"Partial\"] = \"partial\";\n    SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\n\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n    ConnectionLineType[\"Bezier\"] = \"default\";\n    ConnectionLineType[\"Straight\"] = \"straight\";\n    ConnectionLineType[\"Step\"] = \"step\";\n    ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n    ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n    MarkerType[\"Arrow\"] = \"arrow\";\n    MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\n\nvar Position;\n(function (Position) {\n    Position[\"Left\"] = \"left\";\n    Position[\"Top\"] = \"top\";\n    Position[\"Right\"] = \"right\";\n    Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\n\nfunction getControl({ pos, x1, y1, x2, y2 }) {\n    if (pos === Position.Left || pos === Position.Right) {\n        return [0.5 * (x1 + x2), y1];\n    }\n    return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, }) {\n    const [sourceControlX, sourceControlY] = getControl({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n    });\n    const [targetControlX, targetControlY] = getControl({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst SimpleBezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSimpleBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\n\nconst handleDirections = {\n    [Position.Left]: { x: -1, y: 0 },\n    [Position.Right]: { x: 1, y: 0 },\n    [Position.Top]: { x: 0, y: -1 },\n    [Position.Bottom]: { x: 0, y: 1 },\n};\nconst getDirection = ({ source, sourcePosition = Position.Bottom, target, }) => {\n    if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n        return source.x < target.x ? { x: 1, y: 0 } : { x: -1, y: 0 };\n    }\n    return source.y < target.y ? { x: 0, y: 1 } : { x: 0, y: -1 };\n};\nconst distance = (a, b) => Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints({ source, sourcePosition = Position.Bottom, target, targetPosition = Position.Top, center, offset, }) {\n    const sourceDir = handleDirections[sourcePosition];\n    const targetDir = handleDirections[targetPosition];\n    const sourceGapped = { x: source.x + sourceDir.x * offset, y: source.y + sourceDir.y * offset };\n    const targetGapped = { x: target.x + targetDir.x * offset, y: target.y + targetDir.y * offset };\n    const dir = getDirection({\n        source: sourceGapped,\n        sourcePosition,\n        target: targetGapped,\n    });\n    const dirAccessor = dir.x !== 0 ? 'x' : 'y';\n    const currDir = dir[dirAccessor];\n    let points = [];\n    let centerX, centerY;\n    const [defaultCenterX, defaultCenterY, defaultOffsetX, defaultOffsetY] = getEdgeCenter({\n        sourceX: source.x,\n        sourceY: source.y,\n        targetX: target.x,\n        targetY: target.y,\n    });\n    // opposite handle positions, default case\n    if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n        centerX = center.x || defaultCenterX;\n        centerY = center.y || defaultCenterY;\n        //    --->\n        //    |\n        // >---\n        const verticalSplit = [\n            { x: centerX, y: sourceGapped.y },\n            { x: centerX, y: targetGapped.y },\n        ];\n        //    |\n        //  ---\n        //  |\n        const horizontalSplit = [\n            { x: sourceGapped.x, y: centerY },\n            { x: targetGapped.x, y: centerY },\n        ];\n        if (sourceDir[dirAccessor] === currDir) {\n            points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n        }\n        else {\n            points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n        }\n    }\n    else {\n        // sourceTarget means we take x from source and y from target, targetSource is the opposite\n        const sourceTarget = [{ x: sourceGapped.x, y: targetGapped.y }];\n        const targetSource = [{ x: targetGapped.x, y: sourceGapped.y }];\n        // this handles edges with same handle positions\n        if (dirAccessor === 'x') {\n            points = sourceDir.x === currDir ? targetSource : sourceTarget;\n        }\n        else {\n            points = sourceDir.y === currDir ? sourceTarget : targetSource;\n        }\n        // these are conditions for handling mixed handle positions like Right -> Bottom for example\n        if (sourcePosition !== targetPosition) {\n            const dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n            const isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n            const sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n            const sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n            const flipSourceTarget = (sourceDir[dirAccessor] === 1 && ((!isSameDir && sourceGtTargetOppo) || (isSameDir && sourceLtTargetOppo))) ||\n                (sourceDir[dirAccessor] !== 1 && ((!isSameDir && sourceLtTargetOppo) || (isSameDir && sourceGtTargetOppo)));\n            if (flipSourceTarget) {\n                points = dirAccessor === 'x' ? sourceTarget : targetSource;\n            }\n        }\n        centerX = points[0].x;\n        centerY = points[0].y;\n    }\n    const pathPoints = [source, sourceGapped, ...points, targetGapped, target];\n    return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n    const bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n    const { x, y } = b;\n    // no bend\n    if ((a.x === x && x === c.x) || (a.y === y && y === c.y)) {\n        return `L${x} ${y}`;\n    }\n    // first segment is horizontal\n    if (a.y === y) {\n        const xDir = a.x < c.x ? -1 : 1;\n        const yDir = a.y < c.y ? 1 : -1;\n        return `L ${x + bendSize * xDir},${y}Q ${x},${y} ${x},${y + bendSize * yDir}`;\n    }\n    const xDir = a.x < c.x ? 1 : -1;\n    const yDir = a.y < c.y ? -1 : 1;\n    return `L ${x},${y + bendSize * yDir}Q ${x},${y} ${x + bendSize * xDir},${y}`;\n}\nfunction getSmoothStepPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, borderRadius = 5, centerX, centerY, offset = 20, }) {\n    const [points, labelX, labelY, offsetX, offsetY] = getPoints({\n        source: { x: sourceX, y: sourceY },\n        sourcePosition,\n        target: { x: targetX, y: targetY },\n        targetPosition,\n        center: { x: centerX, y: centerY },\n        offset,\n    });\n    const path = points.reduce((res, p, i) => {\n        let segment = '';\n        if (i > 0 && i < points.length - 1) {\n            segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n        }\n        else {\n            segment = `${i === 0 ? 'M' : 'L'}${p.x} ${p.y}`;\n        }\n        res += segment;\n        return res;\n    }, '');\n    return [path, labelX, labelY, offsetX, offsetY];\n}\nconst SmoothStepEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, sourcePosition = Position.Bottom, targetPosition = Position.Top, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSmoothStepPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        borderRadius: pathOptions?.borderRadius,\n        offset: pathOptions?.offset,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSmoothStepEdge.displayName = 'SmoothStepEdge';\n\nconst StepEdge = memo((props) => (jsx(SmoothStepEdge, { ...props, pathOptions: useMemo(() => ({ borderRadius: 0, offset: props.pathOptions?.offset }), [props.pathOptions?.offset]) })));\nStepEdge.displayName = 'StepEdge';\n\nfunction getStraightPath({ sourceX, sourceY, targetX, targetY, }) {\n    const [labelX, labelY, offsetX, offsetY] = getEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n    });\n    return [`M ${sourceX},${sourceY}L ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst StraightEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getStraightPath({ sourceX, sourceY, targetX, targetY });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nStraightEdge.displayName = 'StraightEdge';\n\nfunction calculateControlOffset(distance, curvature) {\n    if (distance >= 0) {\n        return 0.5 * distance;\n    }\n    return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature({ pos, x1, y1, x2, y2, c }) {\n    switch (pos) {\n        case Position.Left:\n            return [x1 - calculateControlOffset(x1 - x2, c), y1];\n        case Position.Right:\n            return [x1 + calculateControlOffset(x2 - x1, c), y1];\n        case Position.Top:\n            return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n        case Position.Bottom:\n            return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n    }\n}\nfunction getBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, curvature = 0.25, }) {\n    const [sourceControlX, sourceControlY] = getControlWithCurvature({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n        c: curvature,\n    });\n    const [targetControlX, targetControlY] = getControlWithCurvature({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n        c: curvature,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst BezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        curvature: pathOptions?.curvature,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nBezierEdge.displayName = 'BezierEdge';\n\nconst NodeIdContext = createContext(null);\nconst Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\nconst useNodeId = () => {\n    const nodeId = useContext(NodeIdContext);\n    return nodeId;\n};\n\nconst isEdge = (element) => 'id' in element && 'source' in element && 'target' in element;\nconst isNode = (element) => 'id' in element && !('source' in element) && !('target' in element);\nconst getOutgoers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const outgoerIds = edges.filter((e) => e.source === node.id).map((e) => e.target);\n    return nodes.filter((n) => outgoerIds.includes(n.id));\n};\nconst getIncomers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const incomersIds = edges.filter((e) => e.target === node.id).map((e) => e.source);\n    return nodes.filter((n) => incomersIds.includes(n.id));\n};\nconst getEdgeId = ({ source, sourceHandle, target, targetHandle }) => `reactflow__edge-${source}${sourceHandle || ''}-${target}${targetHandle || ''}`;\nconst getMarkerId = (marker, rfId) => {\n    if (typeof marker === 'undefined') {\n        return '';\n    }\n    if (typeof marker === 'string') {\n        return marker;\n    }\n    const idPrefix = rfId ? `${rfId}__` : '';\n    return `${idPrefix}${Object.keys(marker)\n        .sort()\n        .map((key) => `${key}=${marker[key]}`)\n        .join('&')}`;\n};\nconst connectionExists = (edge, edges) => {\n    return edges.some((el) => el.source === edge.source &&\n        el.target === edge.target &&\n        (el.sourceHandle === edge.sourceHandle || (!el.sourceHandle && !edge.sourceHandle)) &&\n        (el.targetHandle === edge.targetHandle || (!el.targetHandle && !edge.targetHandle)));\n};\nconst addEdge = (edgeParams, edges) => {\n    if (!edgeParams.source || !edgeParams.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    let edge;\n    if (isEdge(edgeParams)) {\n        edge = { ...edgeParams };\n    }\n    else {\n        edge = {\n            ...edgeParams,\n            id: getEdgeId(edgeParams),\n        };\n    }\n    if (connectionExists(edge, edges)) {\n        return edges;\n    }\n    return edges.concat(edge);\n};\nconst updateEdge = (oldEdge, newConnection, edges, options = { shouldReplaceId: true }) => {\n    const { id: oldEdgeId, ...rest } = oldEdge;\n    if (!newConnection.source || !newConnection.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    const foundEdge = edges.find((e) => e.id === oldEdgeId);\n    if (!foundEdge) {\n        devWarn('007', errorMessages['error007'](oldEdgeId));\n        return edges;\n    }\n    // Remove old edge and create the new edge with parameters of old edge.\n    const edge = {\n        ...rest,\n        id: options.shouldReplaceId ? getEdgeId(newConnection) : oldEdgeId,\n        source: newConnection.source,\n        target: newConnection.target,\n        sourceHandle: newConnection.sourceHandle,\n        targetHandle: newConnection.targetHandle,\n    };\n    return edges.filter((e) => e.id !== oldEdgeId).concat(edge);\n};\nconst pointToRendererPoint = ({ x, y }, [tx, ty, tScale], snapToGrid, [snapX, snapY]) => {\n    const position = {\n        x: (x - tx) / tScale,\n        y: (y - ty) / tScale,\n    };\n    if (snapToGrid) {\n        return {\n            x: snapX * Math.round(position.x / snapX),\n            y: snapY * Math.round(position.y / snapY),\n        };\n    }\n    return position;\n};\nconst rendererPointToPoint = ({ x, y }, [tx, ty, tScale]) => {\n    return {\n        x: x * tScale + tx,\n        y: y * tScale + ty,\n    };\n};\nconst getNodePositionWithOrigin = (node, nodeOrigin = [0, 0]) => {\n    if (!node) {\n        return {\n            x: 0,\n            y: 0,\n            positionAbsolute: {\n                x: 0,\n                y: 0,\n            },\n        };\n    }\n    const offsetX = (node.width ?? 0) * nodeOrigin[0];\n    const offsetY = (node.height ?? 0) * nodeOrigin[1];\n    const position = {\n        x: node.position.x - offsetX,\n        y: node.position.y - offsetY,\n    };\n    return {\n        ...position,\n        positionAbsolute: node.positionAbsolute\n            ? {\n                x: node.positionAbsolute.x - offsetX,\n                y: node.positionAbsolute.y - offsetY,\n            }\n            : position,\n    };\n};\nconst getRectOfNodes = (nodes, nodeOrigin = [0, 0]) => {\n    if (nodes.length === 0) {\n        return { x: 0, y: 0, width: 0, height: 0 };\n    }\n    const box = nodes.reduce((currBox, node) => {\n        const { x, y } = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute;\n        return getBoundsOfBoxes(currBox, rectToBox({\n            x,\n            y,\n            width: node.width || 0,\n            height: node.height || 0,\n        }));\n    }, { x: Infinity, y: Infinity, x2: -Infinity, y2: -Infinity });\n    return boxToRect(box);\n};\nconst getNodesInside = (nodeInternals, rect, [tx, ty, tScale] = [0, 0, 1], partially = false, \n// set excludeNonSelectableNodes if you want to pay attention to the nodes \"selectable\" attribute\nexcludeNonSelectableNodes = false, nodeOrigin = [0, 0]) => {\n    const paneRect = {\n        x: (rect.x - tx) / tScale,\n        y: (rect.y - ty) / tScale,\n        width: rect.width / tScale,\n        height: rect.height / tScale,\n    };\n    const visibleNodes = [];\n    nodeInternals.forEach((node) => {\n        const { width, height, selectable = true, hidden = false } = node;\n        if ((excludeNonSelectableNodes && !selectable) || hidden) {\n            return false;\n        }\n        const { positionAbsolute } = getNodePositionWithOrigin(node, nodeOrigin);\n        const nodeRect = {\n            x: positionAbsolute.x,\n            y: positionAbsolute.y,\n            width: width || 0,\n            height: height || 0,\n        };\n        const overlappingArea = getOverlappingArea(paneRect, nodeRect);\n        const notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\n        const partiallyVisible = partially && overlappingArea > 0;\n        const area = (width || 0) * (height || 0);\n        const isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\n        if (isVisible || node.dragging) {\n            visibleNodes.push(node);\n        }\n    });\n    return visibleNodes;\n};\nconst getConnectedEdges = (nodes, edges) => {\n    const nodeIds = nodes.map((node) => node.id);\n    return edges.filter((edge) => nodeIds.includes(edge.source) || nodeIds.includes(edge.target));\n};\nconst getTransformForBounds = (bounds, width, height, minZoom, maxZoom, padding = 0.1) => {\n    const xZoom = width / (bounds.width * (1 + padding));\n    const yZoom = height / (bounds.height * (1 + padding));\n    const zoom = Math.min(xZoom, yZoom);\n    const clampedZoom = clamp(zoom, minZoom, maxZoom);\n    const boundsCenterX = bounds.x + bounds.width / 2;\n    const boundsCenterY = bounds.y + bounds.height / 2;\n    const x = width / 2 - boundsCenterX * clampedZoom;\n    const y = height / 2 - boundsCenterY * clampedZoom;\n    return [x, y, clampedZoom];\n};\nconst getD3Transition = (selection, duration = 0) => {\n    return selection.transition().duration(duration);\n};\n\n// this functions collects all handles and adds an absolute position\n// so that we can later find the closest handle to the mouse position\nfunction getHandles(node, handleBounds, type, currentHandle) {\n    return (handleBounds[type] || []).reduce((res, h) => {\n        if (`${node.id}-${h.id}-${type}` !== currentHandle) {\n            res.push({\n                id: h.id || null,\n                type,\n                nodeId: node.id,\n                x: (node.positionAbsolute?.x ?? 0) + h.x + h.width / 2,\n                y: (node.positionAbsolute?.y ?? 0) + h.y + h.height / 2,\n            });\n        }\n        return res;\n    }, []);\n}\nfunction getClosestHandle(pos, connectionRadius, handles) {\n    let closestHandles = [];\n    let minDistance = Infinity;\n    handles.forEach((handle) => {\n        const distance = Math.sqrt(Math.pow(handle.x - pos.x, 2) + Math.pow(handle.y - pos.y, 2));\n        if (distance <= connectionRadius) {\n            if (distance < minDistance) {\n                closestHandles = [handle];\n            }\n            else if (distance === minDistance) {\n                // when multiple handles are on the same distance we collect all of them\n                closestHandles.push(handle);\n            }\n            minDistance = distance;\n        }\n    });\n    if (!closestHandles.length) {\n        return null;\n    }\n    return closestHandles.length === 1\n        ? closestHandles[0]\n        : // if multiple handles are layouted on top of each other we take the one with type = target because it's more likely that the user wants to connect to this one\n            closestHandles.find((handle) => handle.type === 'target') || closestHandles[0];\n}\nconst nullConnection = { source: null, target: null, sourceHandle: null, targetHandle: null };\n// checks if  and returns connection in fom of an object { source: 123, target: 312 }\nfunction isValidHandle(event, handle, connectionMode, fromNodeId, fromHandleId, fromType, isValidConnection, doc) {\n    const isTarget = fromType === 'target';\n    const handleDomNode = doc.querySelector(`.react-flow__handle[data-id=\"${handle?.nodeId}-${handle?.id}-${handle?.type}\"]`);\n    const { x, y } = getEventPosition(event);\n    const handleBelow = doc.elementFromPoint(x, y);\n    // we always want to prioritize the handle below the mouse cursor over the closest distance handle,\n    // because it could be that the center of another handle is closer to the mouse pointer than the handle below the cursor\n    const handleToCheck = handleBelow?.classList.contains('react-flow__handle') ? handleBelow : handleDomNode;\n    const result = {\n        handleDomNode: handleToCheck,\n        isValid: false,\n        connection: nullConnection,\n        endHandle: null,\n    };\n    if (handleToCheck) {\n        const handleType = getHandleType(undefined, handleToCheck);\n        const handleNodeId = handleToCheck.getAttribute('data-nodeid');\n        const handleId = handleToCheck.getAttribute('data-handleid');\n        const connectable = handleToCheck.classList.contains('connectable');\n        const connectableEnd = handleToCheck.classList.contains('connectableend');\n        const connection = {\n            source: isTarget ? handleNodeId : fromNodeId,\n            sourceHandle: isTarget ? handleId : fromHandleId,\n            target: isTarget ? fromNodeId : handleNodeId,\n            targetHandle: isTarget ? fromHandleId : handleId,\n        };\n        result.connection = connection;\n        const isConnectable = connectable && connectableEnd;\n        // in strict mode we don't allow target to target or source to source connections\n        const isValid = isConnectable &&\n            (connectionMode === ConnectionMode.Strict\n                ? (isTarget && handleType === 'source') || (!isTarget && handleType === 'target')\n                : handleNodeId !== fromNodeId || handleId !== fromHandleId);\n        if (isValid) {\n            result.endHandle = {\n                nodeId: handleNodeId,\n                handleId,\n                type: handleType,\n            };\n            result.isValid = isValidConnection(connection);\n        }\n    }\n    return result;\n}\nfunction getHandleLookup({ nodes, nodeId, handleId, handleType }) {\n    return nodes.reduce((res, node) => {\n        if (node[internalsSymbol]) {\n            const { handleBounds } = node[internalsSymbol];\n            let sourceHandles = [];\n            let targetHandles = [];\n            if (handleBounds) {\n                sourceHandles = getHandles(node, handleBounds, 'source', `${nodeId}-${handleId}-${handleType}`);\n                targetHandles = getHandles(node, handleBounds, 'target', `${nodeId}-${handleId}-${handleType}`);\n            }\n            res.push(...sourceHandles, ...targetHandles);\n        }\n        return res;\n    }, []);\n}\nfunction getHandleType(edgeUpdaterType, handleDomNode) {\n    if (edgeUpdaterType) {\n        return edgeUpdaterType;\n    }\n    else if (handleDomNode?.classList.contains('target')) {\n        return 'target';\n    }\n    else if (handleDomNode?.classList.contains('source')) {\n        return 'source';\n    }\n    return null;\n}\nfunction resetRecentHandle(handleDomNode) {\n    handleDomNode?.classList.remove('valid', 'connecting', 'react-flow__handle-valid', 'react-flow__handle-connecting');\n}\nfunction getConnectionStatus(isInsideConnectionRadius, isHandleValid) {\n    let connectionStatus = null;\n    if (isHandleValid) {\n        connectionStatus = 'valid';\n    }\n    else if (isInsideConnectionRadius && !isHandleValid) {\n        connectionStatus = 'invalid';\n    }\n    return connectionStatus;\n}\n\nfunction handlePointerDown({ event, handleId, nodeId, onConnect, isTarget, getState, setState, isValidConnection, edgeUpdaterType, onEdgeUpdateEnd, }) {\n    // when react-flow is used inside a shadow root we can't use document\n    const doc = getHostForElement(event.target);\n    const { connectionMode, domNode, autoPanOnConnect, connectionRadius, onConnectStart, panBy, getNodes, cancelConnection, } = getState();\n    let autoPanId = 0;\n    let closestHandle;\n    const { x, y } = getEventPosition(event);\n    const clickedHandle = doc?.elementFromPoint(x, y);\n    const handleType = getHandleType(edgeUpdaterType, clickedHandle);\n    const containerBounds = domNode?.getBoundingClientRect();\n    if (!containerBounds || !handleType) {\n        return;\n    }\n    let prevActiveHandle;\n    let connectionPosition = getEventPosition(event, containerBounds);\n    let autoPanStarted = false;\n    let connection = null;\n    let isValid = false;\n    let handleDomNode = null;\n    const handleLookup = getHandleLookup({\n        nodes: getNodes(),\n        nodeId,\n        handleId,\n        handleType,\n    });\n    // when the user is moving the mouse close to the edge of the canvas while connecting we move the canvas\n    const autoPan = () => {\n        if (!autoPanOnConnect) {\n            return;\n        }\n        const [xMovement, yMovement] = calcAutoPan(connectionPosition, containerBounds);\n        panBy({ x: xMovement, y: yMovement });\n        autoPanId = requestAnimationFrame(autoPan);\n    };\n    setState({\n        connectionPosition,\n        connectionStatus: null,\n        // connectionNodeId etc will be removed in the next major in favor of connectionStartHandle\n        connectionNodeId: nodeId,\n        connectionHandleId: handleId,\n        connectionHandleType: handleType,\n        connectionStartHandle: {\n            nodeId,\n            handleId,\n            type: handleType,\n        },\n        connectionEndHandle: null,\n    });\n    onConnectStart?.(event, { nodeId, handleId, handleType });\n    function onPointerMove(event) {\n        const { transform } = getState();\n        connectionPosition = getEventPosition(event, containerBounds);\n        closestHandle = getClosestHandle(pointToRendererPoint(connectionPosition, transform, false, [1, 1]), connectionRadius, handleLookup);\n        if (!autoPanStarted) {\n            autoPan();\n            autoPanStarted = true;\n        }\n        const result = isValidHandle(event, closestHandle, connectionMode, nodeId, handleId, isTarget ? 'target' : 'source', isValidConnection, doc);\n        handleDomNode = result.handleDomNode;\n        connection = result.connection;\n        isValid = result.isValid;\n        setState({\n            connectionPosition: closestHandle && isValid\n                ? rendererPointToPoint({\n                    x: closestHandle.x,\n                    y: closestHandle.y,\n                }, transform)\n                : connectionPosition,\n            connectionStatus: getConnectionStatus(!!closestHandle, isValid),\n            connectionEndHandle: result.endHandle,\n        });\n        if (!closestHandle && !isValid && !handleDomNode) {\n            return resetRecentHandle(prevActiveHandle);\n        }\n        if (connection.source !== connection.target && handleDomNode) {\n            resetRecentHandle(prevActiveHandle);\n            prevActiveHandle = handleDomNode;\n            // @todo: remove the old class names \"react-flow__handle-\" in the next major version\n            handleDomNode.classList.add('connecting', 'react-flow__handle-connecting');\n            handleDomNode.classList.toggle('valid', isValid);\n            handleDomNode.classList.toggle('react-flow__handle-valid', isValid);\n        }\n    }\n    function onPointerUp(event) {\n        if ((closestHandle || handleDomNode) && connection && isValid) {\n            onConnect?.(connection);\n        }\n        // it's important to get a fresh reference from the store here\n        // in order to get the latest state of onConnectEnd\n        getState().onConnectEnd?.(event);\n        if (edgeUpdaterType) {\n            onEdgeUpdateEnd?.(event);\n        }\n        resetRecentHandle(prevActiveHandle);\n        cancelConnection();\n        cancelAnimationFrame(autoPanId);\n        autoPanStarted = false;\n        isValid = false;\n        connection = null;\n        handleDomNode = null;\n        doc.removeEventListener('mousemove', onPointerMove);\n        doc.removeEventListener('mouseup', onPointerUp);\n        doc.removeEventListener('touchmove', onPointerMove);\n        doc.removeEventListener('touchend', onPointerUp);\n    }\n    doc.addEventListener('mousemove', onPointerMove);\n    doc.addEventListener('mouseup', onPointerUp);\n    doc.addEventListener('touchmove', onPointerMove);\n    doc.addEventListener('touchend', onPointerUp);\n}\n\nconst alwaysValid = () => true;\nconst selector$f = (s) => ({\n    connectionStartHandle: s.connectionStartHandle,\n    connectOnClick: s.connectOnClick,\n    noPanClassName: s.noPanClassName,\n});\nconst connectingSelector = (nodeId, handleId, type) => (state) => {\n    const { connectionStartHandle: startHandle, connectionEndHandle: endHandle, connectionClickStartHandle: clickHandle, } = state;\n    return {\n        connecting: (startHandle?.nodeId === nodeId && startHandle?.handleId === handleId && startHandle?.type === type) ||\n            (endHandle?.nodeId === nodeId && endHandle?.handleId === handleId && endHandle?.type === type),\n        clickConnecting: clickHandle?.nodeId === nodeId && clickHandle?.handleId === handleId && clickHandle?.type === type,\n    };\n};\nconst Handle = forwardRef(({ type = 'source', position = Position.Top, isValidConnection, isConnectable = true, isConnectableStart = true, isConnectableEnd = true, id, onConnect, children, className, onMouseDown, onTouchStart, ...rest }, ref) => {\n    const handleId = id || null;\n    const isTarget = type === 'target';\n    const store = useStoreApi();\n    const nodeId = useNodeId();\n    const { connectOnClick, noPanClassName } = useStore(selector$f, shallow);\n    const { connecting, clickConnecting } = useStore(connectingSelector(nodeId, handleId, type), shallow);\n    if (!nodeId) {\n        store.getState().onError?.('010', errorMessages['error010']());\n    }\n    const onConnectExtended = (params) => {\n        const { defaultEdgeOptions, onConnect: onConnectAction, hasDefaultEdges } = store.getState();\n        const edgeParams = {\n            ...defaultEdgeOptions,\n            ...params,\n        };\n        if (hasDefaultEdges) {\n            const { edges, setEdges } = store.getState();\n            setEdges(addEdge(edgeParams, edges));\n        }\n        onConnectAction?.(edgeParams);\n        onConnect?.(edgeParams);\n    };\n    const onPointerDown = (event) => {\n        if (!nodeId) {\n            return;\n        }\n        const isMouseTriggered = isMouseEvent(event);\n        if (isConnectableStart && ((isMouseTriggered && event.button === 0) || !isMouseTriggered)) {\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectExtended,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection: isValidConnection || store.getState().isValidConnection || alwaysValid,\n            });\n        }\n        if (isMouseTriggered) {\n            onMouseDown?.(event);\n        }\n        else {\n            onTouchStart?.(event);\n        }\n    };\n    const onClick = (event) => {\n        const { onClickConnectStart, onClickConnectEnd, connectionClickStartHandle, connectionMode, isValidConnection: isValidConnectionStore, } = store.getState();\n        if (!nodeId || (!connectionClickStartHandle && !isConnectableStart)) {\n            return;\n        }\n        if (!connectionClickStartHandle) {\n            onClickConnectStart?.(event, { nodeId, handleId, handleType: type });\n            store.setState({ connectionClickStartHandle: { nodeId, type, handleId } });\n            return;\n        }\n        const doc = getHostForElement(event.target);\n        const isValidConnectionHandler = isValidConnection || isValidConnectionStore || alwaysValid;\n        const { connection, isValid } = isValidHandle(event, {\n            nodeId,\n            id: handleId,\n            type,\n        }, connectionMode, connectionClickStartHandle.nodeId, connectionClickStartHandle.handleId || null, connectionClickStartHandle.type, isValidConnectionHandler, doc);\n        if (isValid) {\n            onConnectExtended(connection);\n        }\n        onClickConnectEnd?.(event);\n        store.setState({ connectionClickStartHandle: null });\n    };\n    return (jsx(\"div\", { \"data-handleid\": handleId, \"data-nodeid\": nodeId, \"data-handlepos\": position, \"data-id\": `${nodeId}-${handleId}-${type}`, className: cc([\n            'react-flow__handle',\n            `react-flow__handle-${position}`,\n            'nodrag',\n            noPanClassName,\n            className,\n            {\n                source: !isTarget,\n                target: isTarget,\n                connectable: isConnectable,\n                connectablestart: isConnectableStart,\n                connectableend: isConnectableEnd,\n                connecting: clickConnecting,\n                // this class is used to style the handle when the user is connecting\n                connectionindicator: isConnectable && ((isConnectableStart && !connecting) || (isConnectableEnd && connecting)),\n            },\n        ]), onMouseDown: onPointerDown, onTouchStart: onPointerDown, onClick: connectOnClick ? onClick : undefined, ref: ref, ...rest, children: children }));\n});\nHandle.displayName = 'Handle';\nvar Handle$1 = memo(Handle);\n\nconst DefaultNode = ({ data, isConnectable, targetPosition = Position.Top, sourcePosition = Position.Bottom, }) => {\n    return (jsxs(Fragment, { children: [jsx(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label, jsx(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\n};\nDefaultNode.displayName = 'DefaultNode';\nvar DefaultNode$1 = memo(DefaultNode);\n\nconst InputNode = ({ data, isConnectable, sourcePosition = Position.Bottom }) => (jsxs(Fragment, { children: [data?.label, jsx(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\nInputNode.displayName = 'InputNode';\nvar InputNode$1 = memo(InputNode);\n\nconst OutputNode = ({ data, isConnectable, targetPosition = Position.Top }) => (jsxs(Fragment, { children: [jsx(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label] }));\nOutputNode.displayName = 'OutputNode';\nvar OutputNode$1 = memo(OutputNode);\n\nconst GroupNode = () => null;\nGroupNode.displayName = 'GroupNode';\n\nconst selector$e = (s) => ({\n    selectedNodes: s.getNodes().filter((n) => n.selected),\n    selectedEdges: s.edges.filter((e) => e.selected),\n});\nconst selectId = (obj) => obj.id;\nfunction areEqual(a, b) {\n    return (shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) &&\n        shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId)));\n}\n// This is just a helper component for calling the onSelectionChange listener.\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\nconst SelectionListener = memo(({ onSelectionChange }) => {\n    const store = useStoreApi();\n    const { selectedNodes, selectedEdges } = useStore(selector$e, areEqual);\n    useEffect(() => {\n        const params = { nodes: selectedNodes, edges: selectedEdges };\n        onSelectionChange?.(params);\n        store.getState().onSelectionChange?.(params);\n    }, [selectedNodes, selectedEdges, onSelectionChange]);\n    return null;\n});\nSelectionListener.displayName = 'SelectionListener';\nconst changeSelector = (s) => !!s.onSelectionChange;\nfunction Wrapper$1({ onSelectionChange }) {\n    const storeHasSelectionChange = useStore(changeSelector);\n    if (onSelectionChange || storeHasSelectionChange) {\n        return jsx(SelectionListener, { onSelectionChange: onSelectionChange });\n    }\n    return null;\n}\n\nconst selector$d = (s) => ({\n    setNodes: s.setNodes,\n    setEdges: s.setEdges,\n    setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n    setMinZoom: s.setMinZoom,\n    setMaxZoom: s.setMaxZoom,\n    setTranslateExtent: s.setTranslateExtent,\n    setNodeExtent: s.setNodeExtent,\n    reset: s.reset,\n});\nfunction useStoreUpdater(value, setStoreState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setStoreState(value);\n        }\n    }, [value]);\n}\n// updates with values in store that don't have a dedicated setter function\nfunction useDirectStoreUpdater(key, value, setState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setState({ [key]: value });\n        }\n    }, [value]);\n}\nconst StoreUpdater = ({ nodes, edges, defaultNodes, defaultEdges, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, nodesDraggable, nodesConnectable, nodesFocusable, edgesFocusable, edgesUpdatable, elevateNodesOnSelect, minZoom, maxZoom, nodeExtent, onNodesChange, onEdgesChange, elementsSelectable, connectionMode, snapGrid, snapToGrid, translateExtent, connectOnClick, defaultEdgeOptions, fitView, fitViewOptions, onNodesDelete, onEdgesDelete, onNodeDrag, onNodeDragStart, onNodeDragStop, onSelectionDrag, onSelectionDragStart, onSelectionDragStop, noPanClassName, nodeOrigin, rfId, autoPanOnConnect, autoPanOnNodeDrag, onError, connectionRadius, isValidConnection, }) => {\n    const { setNodes, setEdges, setDefaultNodesAndEdges, setMinZoom, setMaxZoom, setTranslateExtent, setNodeExtent, reset, } = useStore(selector$d, shallow);\n    const store = useStoreApi();\n    useEffect(() => {\n        const edgesWithDefaults = defaultEdges?.map((e) => ({ ...e, ...defaultEdgeOptions }));\n        setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\n        return () => {\n            reset();\n        };\n    }, []);\n    useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\n    useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\n    useDirectStoreUpdater('onConnect', onConnect, store.setState);\n    useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\n    useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\n    useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\n    useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\n    useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\n    useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\n    useDirectStoreUpdater('nodesFocusable', nodesFocusable, store.setState);\n    useDirectStoreUpdater('edgesFocusable', edgesFocusable, store.setState);\n    useDirectStoreUpdater('edgesUpdatable', edgesUpdatable, store.setState);\n    useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\n    useDirectStoreUpdater('elevateNodesOnSelect', elevateNodesOnSelect, store.setState);\n    useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\n    useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\n    useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\n    useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\n    useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\n    useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\n    useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\n    useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\n    useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\n    useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\n    useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\n    useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\n    useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\n    useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\n    useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\n    useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\n    useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\n    useDirectStoreUpdater('rfId', rfId, store.setState);\n    useDirectStoreUpdater('autoPanOnConnect', autoPanOnConnect, store.setState);\n    useDirectStoreUpdater('autoPanOnNodeDrag', autoPanOnNodeDrag, store.setState);\n    useDirectStoreUpdater('onError', onError, store.setState);\n    useDirectStoreUpdater('connectionRadius', connectionRadius, store.setState);\n    useDirectStoreUpdater('isValidConnection', isValidConnection, store.setState);\n    useStoreUpdater(nodes, setNodes);\n    useStoreUpdater(edges, setEdges);\n    useStoreUpdater(minZoom, setMinZoom);\n    useStoreUpdater(maxZoom, setMaxZoom);\n    useStoreUpdater(translateExtent, setTranslateExtent);\n    useStoreUpdater(nodeExtent, setNodeExtent);\n    return null;\n};\n\nconst style = { display: 'none' };\nconst ariaLiveStyle = {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    margin: -1,\n    border: 0,\n    padding: 0,\n    overflow: 'hidden',\n    clip: 'rect(0px, 0px, 0px, 0px)',\n    clipPath: 'inset(100%)',\n};\nconst ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nconst ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nconst ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\nconst selector$c = (s) => s.ariaLiveMessage;\nfunction AriaLiveMessage({ rfId }) {\n    const ariaLiveMessage = useStore(selector$c);\n    return (jsx(\"div\", { id: `${ARIA_LIVE_MESSAGE}-${rfId}`, \"aria-live\": \"assertive\", \"aria-atomic\": \"true\", style: ariaLiveStyle, children: ariaLiveMessage }));\n}\nfunction A11yDescriptions({ rfId, disableKeyboardA11y }) {\n    return (jsxs(Fragment, { children: [jsxs(\"div\", { id: `${ARIA_NODE_DESC_KEY}-${rfId}`, style: style, children: [\"Press enter or space to select a node.\", !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.', \" Press delete to remove it and escape to cancel.\", ' '] }), jsx(\"div\", { id: `${ARIA_EDGE_DESC_KEY}-${rfId}`, style: style, children: \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\" }), !disableKeyboardA11y && jsx(AriaLiveMessage, { rfId: rfId })] }));\n}\n\nconst shiftX = (x, shift, position) => {\n    if (position === Position.Left)\n        return x - shift;\n    if (position === Position.Right)\n        return x + shift;\n    return x;\n};\nconst shiftY = (y, shift, position) => {\n    if (position === Position.Top)\n        return y - shift;\n    if (position === Position.Bottom)\n        return y + shift;\n    return y;\n};\nconst EdgeUpdaterClassName = 'react-flow__edgeupdater';\nconst EdgeAnchor = ({ position, centerX, centerY, radius = 10, onMouseDown, onMouseEnter, onMouseOut, type, }) => (jsx(\"circle\", { onMouseDown: onMouseDown, onMouseEnter: onMouseEnter, onMouseOut: onMouseOut, className: cc([EdgeUpdaterClassName, `${EdgeUpdaterClassName}-${type}`]), cx: shiftX(centerX, radius, position), cy: shiftY(centerY, radius, position), r: radius, stroke: \"transparent\", fill: \"transparent\" }));\n\nconst alwaysValidConnection = () => true;\nvar wrapEdge = (EdgeComponent) => {\n    const EdgeWrapper = ({ id, className, type, data, onClick, onEdgeDoubleClick, selected, animated, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, source, target, sourceX, sourceY, targetX, targetY, sourcePosition, targetPosition, elementsSelectable, hidden, sourceHandleId, targetHandleId, onContextMenu, onMouseEnter, onMouseMove, onMouseLeave, edgeUpdaterRadius, onEdgeUpdate, onEdgeUpdateStart, onEdgeUpdateEnd, markerEnd, markerStart, rfId, ariaLabel, isFocusable, isUpdatable, pathOptions, interactionWidth, }) => {\n        const edgeRef = useRef(null);\n        const [updateHover, setUpdateHover] = useState(false);\n        const [updating, setUpdating] = useState(false);\n        const store = useStoreApi();\n        const markerStartUrl = useMemo(() => `url(#${getMarkerId(markerStart, rfId)})`, [markerStart, rfId]);\n        const markerEndUrl = useMemo(() => `url(#${getMarkerId(markerEnd, rfId)})`, [markerEnd, rfId]);\n        if (hidden) {\n            return null;\n        }\n        const onEdgeClick = (event) => {\n            const { edges, addSelectedEdges } = store.getState();\n            if (elementsSelectable) {\n                store.setState({ nodesSelectionActive: false });\n                addSelectedEdges([id]);\n            }\n            if (onClick) {\n                const edge = edges.find((e) => e.id === id);\n                onClick(event, edge);\n            }\n        };\n        const onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\n        const onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\n        const onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\n        const onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\n        const onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\n        const handleEdgeUpdater = (event, isSourceHandle) => {\n            // avoid triggering edge updater if mouse btn is not left\n            if (event.button !== 0) {\n                return;\n            }\n            const { edges, isValidConnection: isValidConnectionStore } = store.getState();\n            const nodeId = isSourceHandle ? target : source;\n            const handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\n            const handleType = isSourceHandle ? 'target' : 'source';\n            const isValidConnection = isValidConnectionStore || alwaysValidConnection;\n            const isTarget = isSourceHandle;\n            const edge = edges.find((e) => e.id === id);\n            setUpdating(true);\n            onEdgeUpdateStart?.(event, edge, handleType);\n            const _onEdgeUpdateEnd = (evt) => {\n                setUpdating(false);\n                onEdgeUpdateEnd?.(evt, edge, handleType);\n            };\n            const onConnectEdge = (connection) => onEdgeUpdate?.(edge, connection);\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectEdge,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection,\n                edgeUpdaterType: handleType,\n                onEdgeUpdateEnd: _onEdgeUpdateEnd,\n            });\n        };\n        const onEdgeUpdaterSourceMouseDown = (event) => handleEdgeUpdater(event, true);\n        const onEdgeUpdaterTargetMouseDown = (event) => handleEdgeUpdater(event, false);\n        const onEdgeUpdaterMouseEnter = () => setUpdateHover(true);\n        const onEdgeUpdaterMouseOut = () => setUpdateHover(false);\n        const inactive = !elementsSelectable && !onClick;\n        const onKeyDown = (event) => {\n            if (elementSelectionKeys.includes(event.key) && elementsSelectable) {\n                const { unselectNodesAndEdges, addSelectedEdges, edges } = store.getState();\n                const unselect = event.key === 'Escape';\n                if (unselect) {\n                    edgeRef.current?.blur();\n                    unselectNodesAndEdges({ edges: [edges.find((e) => e.id === id)] });\n                }\n                else {\n                    addSelectedEdges([id]);\n                }\n            }\n        };\n        return (jsxs(\"g\", { className: cc([\n                'react-flow__edge',\n                `react-flow__edge-${type}`,\n                className,\n                { selected, animated, inactive, updating: updateHover },\n            ]), onClick: onEdgeClick, onDoubleClick: onEdgeDoubleClickHandler, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : undefined, \"data-testid\": `rf__edge-${id}`, \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : `Edge from ${source} to ${target}`, \"aria-describedby\": isFocusable ? `${ARIA_EDGE_DESC_KEY}-${rfId}` : undefined, ref: edgeRef, children: [!updating && (jsx(EdgeComponent, { id: id, source: source, target: target, selected: selected, animated: animated, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, data: data, style: style, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, sourceHandleId: sourceHandleId, targetHandleId: targetHandleId, markerStart: markerStartUrl, markerEnd: markerEndUrl, pathOptions: pathOptions, interactionWidth: interactionWidth })), isUpdatable && (jsxs(Fragment, { children: [(isUpdatable === 'source' || isUpdatable === true) && (jsx(EdgeAnchor, { position: sourcePosition, centerX: sourceX, centerY: sourceY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterSourceMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"source\" })), (isUpdatable === 'target' || isUpdatable === true) && (jsx(EdgeAnchor, { position: targetPosition, centerX: targetX, centerY: targetY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterTargetMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"target\" }))] }))] }));\n    };\n    EdgeWrapper.displayName = 'EdgeWrapper';\n    return memo(EdgeWrapper);\n};\n\nfunction createEdgeTypes(edgeTypes) {\n    const standardTypes = {\n        default: wrapEdge((edgeTypes.default || BezierEdge)),\n        straight: wrapEdge((edgeTypes.bezier || StraightEdge)),\n        step: wrapEdge((edgeTypes.step || StepEdge)),\n        smoothstep: wrapEdge((edgeTypes.step || SmoothStepEdge)),\n        simplebezier: wrapEdge((edgeTypes.simplebezier || SimpleBezierEdge)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(edgeTypes)\n        .filter((k) => !['default', 'bezier'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapEdge((edgeTypes[key] || BezierEdge));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nfunction getHandlePosition(position, nodeRect, handle = null) {\n    const x = (handle?.x || 0) + nodeRect.x;\n    const y = (handle?.y || 0) + nodeRect.y;\n    const width = handle?.width || nodeRect.width;\n    const height = handle?.height || nodeRect.height;\n    switch (position) {\n        case Position.Top:\n            return {\n                x: x + width / 2,\n                y,\n            };\n        case Position.Right:\n            return {\n                x: x + width,\n                y: y + height / 2,\n            };\n        case Position.Bottom:\n            return {\n                x: x + width / 2,\n                y: y + height,\n            };\n        case Position.Left:\n            return {\n                x,\n                y: y + height / 2,\n            };\n    }\n}\nfunction getHandle(bounds, handleId) {\n    if (!bounds) {\n        return null;\n    }\n    if (bounds.length === 1 || !handleId) {\n        return bounds[0];\n    }\n    else if (handleId) {\n        return bounds.find((d) => d.id === handleId) || null;\n    }\n    return null;\n}\nconst getEdgePositions = (sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) => {\n    const sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\n    const targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\n    return {\n        sourceX: sourceHandlePos.x,\n        sourceY: sourceHandlePos.y,\n        targetX: targetHandlePos.x,\n        targetY: targetHandlePos.y,\n    };\n};\nfunction isEdgeVisible({ sourcePos, targetPos, sourceWidth, sourceHeight, targetWidth, targetHeight, width, height, transform, }) {\n    const edgeBox = {\n        x: Math.min(sourcePos.x, targetPos.x),\n        y: Math.min(sourcePos.y, targetPos.y),\n        x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\n        y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight),\n    };\n    if (edgeBox.x === edgeBox.x2) {\n        edgeBox.x2 += 1;\n    }\n    if (edgeBox.y === edgeBox.y2) {\n        edgeBox.y2 += 1;\n    }\n    const viewBox = rectToBox({\n        x: (0 - transform[0]) / transform[2],\n        y: (0 - transform[1]) / transform[2],\n        width: width / transform[2],\n        height: height / transform[2],\n    });\n    const xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\n    const yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\n    const overlappingArea = Math.ceil(xOverlap * yOverlap);\n    return overlappingArea > 0;\n}\nfunction getNodeData(node) {\n    const handleBounds = node?.[internalsSymbol]?.handleBounds || null;\n    const isValid = handleBounds &&\n        node?.width &&\n        node?.height &&\n        typeof node?.positionAbsolute?.x !== 'undefined' &&\n        typeof node?.positionAbsolute?.y !== 'undefined';\n    return [\n        {\n            x: node?.positionAbsolute?.x || 0,\n            y: node?.positionAbsolute?.y || 0,\n            width: node?.width || 0,\n            height: node?.height || 0,\n        },\n        handleBounds,\n        !!isValid,\n    ];\n}\n\nfunction isParentSelected(node, nodeInternals) {\n    if (!node.parentNode) {\n        return false;\n    }\n    const parentNode = nodeInternals.get(node.parentNode);\n    if (!parentNode) {\n        return false;\n    }\n    if (parentNode.selected) {\n        return true;\n    }\n    return isParentSelected(parentNode, nodeInternals);\n}\nfunction hasSelector(target, selector, nodeRef) {\n    let current = target;\n    do {\n        if (current?.matches(selector))\n            return true;\n        if (current === nodeRef.current)\n            return false;\n        current = current.parentElement;\n    } while (current);\n    return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeInternals, nodesDraggable, mousePos, nodeId) {\n    return Array.from(nodeInternals.values())\n        .filter((n) => (n.selected || n.id === nodeId) &&\n        (!n.parentNode || !isParentSelected(n, nodeInternals)) &&\n        (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')))\n        .map((n) => ({\n        id: n.id,\n        position: n.position || { x: 0, y: 0 },\n        positionAbsolute: n.positionAbsolute || { x: 0, y: 0 },\n        distance: {\n            x: mousePos.x - (n.positionAbsolute?.x ?? 0),\n            y: mousePos.y - (n.positionAbsolute?.y ?? 0),\n        },\n        delta: {\n            x: 0,\n            y: 0,\n        },\n        extent: n.extent,\n        parentNode: n.parentNode,\n        width: n.width,\n        height: n.height,\n    }));\n}\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent, nodeOrigin = [0, 0], onError) {\n    let currentExtent = node.extent || nodeExtent;\n    if (node.extent === 'parent') {\n        if (node.parentNode && node.width && node.height) {\n            const parent = nodeInternals.get(node.parentNode);\n            const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n            currentExtent =\n                parent && isNumeric(parentX) && isNumeric(parentY) && isNumeric(parent.width) && isNumeric(parent.height)\n                    ? [\n                        [parentX + node.width * nodeOrigin[0], parentY + node.height * nodeOrigin[1]],\n                        [\n                            parentX + parent.width - node.width + node.width * nodeOrigin[0],\n                            parentY + parent.height - node.height + node.height * nodeOrigin[1],\n                        ],\n                    ]\n                    : currentExtent;\n        }\n        else {\n            onError?.('005', errorMessages['error005']());\n            currentExtent = nodeExtent;\n        }\n    }\n    else if (node.extent && node.parentNode) {\n        const parent = nodeInternals.get(node.parentNode);\n        const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n        currentExtent = [\n            [node.extent[0][0] + parentX, node.extent[0][1] + parentY],\n            [node.extent[1][0] + parentX, node.extent[1][1] + parentY],\n        ];\n    }\n    let parentPosition = { x: 0, y: 0 };\n    if (node.parentNode) {\n        const parentNode = nodeInternals.get(node.parentNode);\n        parentPosition = getNodePositionWithOrigin(parentNode, nodeOrigin).positionAbsolute;\n    }\n    const positionAbsolute = currentExtent\n        ? clampPosition(nextPosition, currentExtent)\n        : nextPosition;\n    return {\n        position: {\n            x: positionAbsolute.x - parentPosition.x,\n            y: positionAbsolute.y - parentPosition.y,\n        },\n        positionAbsolute,\n    };\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams({ nodeId, dragItems, nodeInternals, }) {\n    const extentedDragItems = dragItems.map((n) => {\n        const node = nodeInternals.get(n.id);\n        return {\n            ...node,\n            position: n.position,\n            positionAbsolute: n.positionAbsolute,\n        };\n    });\n    return [nodeId ? extentedDragItems.find((n) => n.id === nodeId) : extentedDragItems[0], extentedDragItems];\n}\n\nconst getHandleBounds = (selector, nodeElement, zoom, nodeOrigin) => {\n    const handles = nodeElement.querySelectorAll(selector);\n    if (!handles || !handles.length) {\n        return null;\n    }\n    const handlesArray = Array.from(handles);\n    const nodeBounds = nodeElement.getBoundingClientRect();\n    const nodeOffset = {\n        x: nodeBounds.width * nodeOrigin[0],\n        y: nodeBounds.height * nodeOrigin[1],\n    };\n    return handlesArray.map((handle) => {\n        const handleBounds = handle.getBoundingClientRect();\n        return {\n            id: handle.getAttribute('data-handleid'),\n            position: handle.getAttribute('data-handlepos'),\n            x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\n            y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom,\n            ...getDimensions(handle),\n        };\n    });\n};\nfunction getMouseHandler(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const node = getState().nodeInternals.get(id);\n            handler(event, { ...node });\n        };\n}\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick({ id, store, unselect = false, nodeRef, }) {\n    const { addSelectedNodes, unselectNodesAndEdges, multiSelectionActive, nodeInternals } = store.getState();\n    const node = nodeInternals.get(id);\n    store.setState({ nodesSelectionActive: false });\n    if (!node.selected) {\n        addSelectedNodes([id]);\n    }\n    else if (unselect || (node.selected && multiSelectionActive)) {\n        unselectNodesAndEdges({ nodes: [node] });\n        requestAnimationFrame(() => nodeRef?.current?.blur());\n    }\n}\n\nfunction useGetPointerPosition() {\n    const store = useStoreApi();\n    // returns the pointer position projected to the RF coordinate system\n    const getPointerPosition = useCallback(({ sourceEvent }) => {\n        const { transform, snapGrid, snapToGrid } = store.getState();\n        const x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\n        const y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\n        const pointerPos = {\n            x: (x - transform[0]) / transform[2],\n            y: (y - transform[1]) / transform[2],\n        };\n        // we need the snapped position in order to be able to skip unnecessary drag events\n        return {\n            xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\n            ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y,\n            ...pointerPos,\n        };\n    }, []);\n    return getPointerPosition;\n}\n\nfunction wrapSelectionDragFunc(selectionFunc) {\n    return (event, _, nodes) => selectionFunc?.(event, nodes);\n}\nfunction useDrag({ nodeRef, disabled = false, noDragClassName, handleSelector, nodeId, isSelectable, selectNodesOnDrag, }) {\n    const store = useStoreApi();\n    const [dragging, setDragging] = useState(false);\n    const dragItems = useRef([]);\n    const lastPos = useRef({ x: null, y: null });\n    const autoPanId = useRef(0);\n    const containerBounds = useRef(null);\n    const mousePosition = useRef({ x: 0, y: 0 });\n    const dragEvent = useRef(null);\n    const autoPanStarted = useRef(false);\n    const getPointerPosition = useGetPointerPosition();\n    useEffect(() => {\n        if (nodeRef?.current) {\n            const selection = select(nodeRef.current);\n            const updateNodes = ({ x, y }) => {\n                const { nodeInternals, onNodeDrag, onSelectionDrag, updateNodePositions, nodeExtent, snapGrid, snapToGrid, nodeOrigin, onError, } = store.getState();\n                lastPos.current = { x, y };\n                let hasChange = false;\n                dragItems.current = dragItems.current.map((n) => {\n                    const nextPosition = { x: x - n.distance.x, y: y - n.distance.y };\n                    if (snapToGrid) {\n                        nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                        nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                    }\n                    const updatedPos = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, nodeOrigin, onError);\n                    // we want to make sure that we only fire a change event when there is a changes\n                    hasChange = hasChange || n.position.x !== updatedPos.position.x || n.position.y !== updatedPos.position.y;\n                    n.position = updatedPos.position;\n                    n.positionAbsolute = updatedPos.positionAbsolute;\n                    return n;\n                });\n                if (!hasChange) {\n                    return;\n                }\n                updateNodePositions(dragItems.current, true, true);\n                setDragging(true);\n                const onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\n                if (onDrag && dragEvent.current) {\n                    const [currentNode, nodes] = getEventHandlerParams({\n                        nodeId,\n                        dragItems: dragItems.current,\n                        nodeInternals,\n                    });\n                    onDrag(dragEvent.current, currentNode, nodes);\n                }\n            };\n            const autoPan = () => {\n                if (!containerBounds.current) {\n                    return;\n                }\n                const [xMovement, yMovement] = calcAutoPan(mousePosition.current, containerBounds.current);\n                if (xMovement !== 0 || yMovement !== 0) {\n                    const { transform, panBy } = store.getState();\n                    lastPos.current.x = (lastPos.current.x ?? 0) - xMovement / transform[2];\n                    lastPos.current.y = (lastPos.current.y ?? 0) - yMovement / transform[2];\n                    if (panBy({ x: xMovement, y: yMovement })) {\n                        updateNodes(lastPos.current);\n                    }\n                }\n                autoPanId.current = requestAnimationFrame(autoPan);\n            };\n            if (disabled) {\n                selection.on('.drag', null);\n            }\n            else {\n                const dragHandler = drag()\n                    .on('start', (event) => {\n                    const { nodeInternals, multiSelectionActive, domNode, nodesDraggable, unselectNodesAndEdges, onNodeDragStart, onSelectionDragStart, } = store.getState();\n                    const onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\n                    if (!selectNodesOnDrag && !multiSelectionActive && nodeId) {\n                        if (!nodeInternals.get(nodeId)?.selected) {\n                            // we need to reset selected nodes when selectNodesOnDrag=false\n                            unselectNodesAndEdges();\n                        }\n                    }\n                    if (nodeId && isSelectable && selectNodesOnDrag) {\n                        handleNodeClick({\n                            id: nodeId,\n                            store,\n                            nodeRef: nodeRef,\n                        });\n                    }\n                    const pointerPos = getPointerPosition(event);\n                    lastPos.current = pointerPos;\n                    dragItems.current = getDragItems(nodeInternals, nodesDraggable, pointerPos, nodeId);\n                    if (onStart && dragItems.current) {\n                        const [currentNode, nodes] = getEventHandlerParams({\n                            nodeId,\n                            dragItems: dragItems.current,\n                            nodeInternals,\n                        });\n                        onStart(event.sourceEvent, currentNode, nodes);\n                    }\n                    containerBounds.current = domNode?.getBoundingClientRect() || null;\n                    mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                })\n                    .on('drag', (event) => {\n                    const pointerPos = getPointerPosition(event);\n                    const { autoPanOnNodeDrag } = store.getState();\n                    if (!autoPanStarted.current && autoPanOnNodeDrag) {\n                        autoPanStarted.current = true;\n                        autoPan();\n                    }\n                    // skip events without movement\n                    if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) &&\n                        dragItems.current) {\n                        dragEvent.current = event.sourceEvent;\n                        mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                        updateNodes(pointerPos);\n                    }\n                })\n                    .on('end', (event) => {\n                    setDragging(false);\n                    autoPanStarted.current = false;\n                    cancelAnimationFrame(autoPanId.current);\n                    if (dragItems.current) {\n                        const { updateNodePositions, nodeInternals, onNodeDragStop, onSelectionDragStop } = store.getState();\n                        const onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\n                        updateNodePositions(dragItems.current, false, false);\n                        if (onStop) {\n                            const [currentNode, nodes] = getEventHandlerParams({\n                                nodeId,\n                                dragItems: dragItems.current,\n                                nodeInternals,\n                            });\n                            onStop(event.sourceEvent, currentNode, nodes);\n                        }\n                    }\n                })\n                    .filter((event) => {\n                    const target = event.target;\n                    const isDraggable = !event.button &&\n                        (!noDragClassName || !hasSelector(target, `.${noDragClassName}`, nodeRef)) &&\n                        (!handleSelector || hasSelector(target, handleSelector, nodeRef));\n                    return isDraggable;\n                });\n                selection.call(dragHandler);\n                return () => {\n                    selection.on('.drag', null);\n                };\n            }\n        }\n    }, [\n        nodeRef,\n        disabled,\n        noDragClassName,\n        handleSelector,\n        isSelectable,\n        store,\n        nodeId,\n        selectNodesOnDrag,\n        getPointerPosition,\n    ]);\n    return dragging;\n}\n\nfunction useUpdateNodePositions() {\n    const store = useStoreApi();\n    const updatePositions = useCallback((params) => {\n        const { nodeInternals, nodeExtent, updateNodePositions, getNodes, snapToGrid, snapGrid, onError, nodesDraggable } = store.getState();\n        const selectedNodes = getNodes().filter((n) => n.selected && (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')));\n        // by default a node moves 5px on each key press, or 20px if shift is pressed\n        // if snap grid is enabled, we use that for the velocity.\n        const xVelo = snapToGrid ? snapGrid[0] : 5;\n        const yVelo = snapToGrid ? snapGrid[1] : 5;\n        const factor = params.isShiftPressed ? 4 : 1;\n        const positionDiffX = params.x * xVelo * factor;\n        const positionDiffY = params.y * yVelo * factor;\n        const nodeUpdates = selectedNodes.map((n) => {\n            if (n.positionAbsolute) {\n                const nextPosition = { x: n.positionAbsolute.x + positionDiffX, y: n.positionAbsolute.y + positionDiffY };\n                if (snapToGrid) {\n                    nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                    nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                }\n                const { positionAbsolute, position } = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, undefined, onError);\n                n.position = position;\n                n.positionAbsolute = positionAbsolute;\n            }\n            return n;\n        });\n        updateNodePositions(nodeUpdates, true, false);\n    }, []);\n    return updatePositions;\n}\n\nconst arrowKeyDiffs = {\n    ArrowUp: { x: 0, y: -1 },\n    ArrowDown: { x: 0, y: 1 },\n    ArrowLeft: { x: -1, y: 0 },\n    ArrowRight: { x: 1, y: 0 },\n};\nvar wrapNode = (NodeComponent) => {\n    const NodeWrapper = ({ id, type, data, xPos, yPos, xPosOrigin, yPosOrigin, selected, onClick, onMouseEnter, onMouseMove, onMouseLeave, onContextMenu, onDoubleClick, style, className, isDraggable, isSelectable, isConnectable, isFocusable, selectNodesOnDrag, sourcePosition, targetPosition, hidden, resizeObserver, dragHandle, zIndex, isParent, noDragClassName, noPanClassName, initialized, disableKeyboardA11y, ariaLabel, rfId, }) => {\n        const store = useStoreApi();\n        const nodeRef = useRef(null);\n        const prevSourcePosition = useRef(sourcePosition);\n        const prevTargetPosition = useRef(targetPosition);\n        const prevType = useRef(type);\n        const hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n        const updatePositions = useUpdateNodePositions();\n        const onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\n        const onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\n        const onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\n        const onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\n        const onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\n        const onSelectNodeHandler = (event) => {\n            if (isSelectable && (!selectNodesOnDrag || !isDraggable)) {\n                // this handler gets called within the drag start event when selectNodesOnDrag=true\n                handleNodeClick({\n                    id,\n                    store,\n                    nodeRef,\n                });\n            }\n            if (onClick) {\n                const node = store.getState().nodeInternals.get(id);\n                onClick(event, { ...node });\n            }\n        };\n        const onKeyDown = (event) => {\n            if (isInputDOMNode(event)) {\n                return;\n            }\n            if (elementSelectionKeys.includes(event.key) && isSelectable) {\n                const unselect = event.key === 'Escape';\n                handleNodeClick({\n                    id,\n                    store,\n                    unselect,\n                    nodeRef,\n                });\n            }\n            else if (!disableKeyboardA11y &&\n                isDraggable &&\n                selected &&\n                Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n                store.setState({\n                    ariaLiveMessage: `Moved selected node ${event.key\n                        .replace('Arrow', '')\n                        .toLowerCase()}. New position, x: ${~~xPos}, y: ${~~yPos}`,\n                });\n                updatePositions({\n                    x: arrowKeyDiffs[event.key].x,\n                    y: arrowKeyDiffs[event.key].y,\n                    isShiftPressed: event.shiftKey,\n                });\n            }\n        };\n        useEffect(() => {\n            if (nodeRef.current && !hidden) {\n                const currNode = nodeRef.current;\n                resizeObserver?.observe(currNode);\n                return () => resizeObserver?.unobserve(currNode);\n            }\n        }, [hidden]);\n        useEffect(() => {\n            // when the user programmatically changes the source or handle position, we re-initialize the node\n            const typeChanged = prevType.current !== type;\n            const sourcePosChanged = prevSourcePosition.current !== sourcePosition;\n            const targetPosChanged = prevTargetPosition.current !== targetPosition;\n            if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\n                if (typeChanged) {\n                    prevType.current = type;\n                }\n                if (sourcePosChanged) {\n                    prevSourcePosition.current = sourcePosition;\n                }\n                if (targetPosChanged) {\n                    prevTargetPosition.current = targetPosition;\n                }\n                store.getState().updateNodeDimensions([{ id, nodeElement: nodeRef.current, forceUpdate: true }]);\n            }\n        }, [id, type, sourcePosition, targetPosition]);\n        const dragging = useDrag({\n            nodeRef,\n            disabled: hidden || !isDraggable,\n            noDragClassName,\n            handleSelector: dragHandle,\n            nodeId: id,\n            isSelectable,\n            selectNodesOnDrag,\n        });\n        if (hidden) {\n            return null;\n        }\n        return (jsx(\"div\", { className: cc([\n                'react-flow__node',\n                `react-flow__node-${type}`,\n                {\n                    // this is overwritable by passing `nopan` as a class name\n                    [noPanClassName]: isDraggable,\n                },\n                className,\n                {\n                    selected,\n                    selectable: isSelectable,\n                    parent: isParent,\n                    dragging,\n                },\n            ]), ref: nodeRef, style: {\n                zIndex,\n                transform: `translate(${xPosOrigin}px,${yPosOrigin}px)`,\n                pointerEvents: hasPointerEvents ? 'all' : 'none',\n                visibility: initialized ? 'visible' : 'hidden',\n                ...style,\n            }, \"data-id\": id, \"data-testid\": `rf__node-${id}`, onMouseEnter: onMouseEnterHandler, onMouseMove: onMouseMoveHandler, onMouseLeave: onMouseLeaveHandler, onContextMenu: onContextMenuHandler, onClick: onSelectNodeHandler, onDoubleClick: onDoubleClickHandler, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : undefined, \"aria-describedby\": disableKeyboardA11y ? undefined : `${ARIA_NODE_DESC_KEY}-${rfId}`, \"aria-label\": ariaLabel, children: jsx(Provider, { value: id, children: jsx(NodeComponent, { id: id, data: data, type: type, xPos: xPos, yPos: yPos, selected: selected, isConnectable: isConnectable, sourcePosition: sourcePosition, targetPosition: targetPosition, dragging: dragging, dragHandle: dragHandle, zIndex: zIndex }) }) }));\n    };\n    NodeWrapper.displayName = 'NodeWrapper';\n    return memo(NodeWrapper);\n};\n\nfunction createNodeTypes(nodeTypes) {\n    const standardTypes = {\n        input: wrapNode((nodeTypes.input || InputNode$1)),\n        default: wrapNode((nodeTypes.default || DefaultNode$1)),\n        output: wrapNode((nodeTypes.output || OutputNode$1)),\n        group: wrapNode((nodeTypes.group || GroupNode)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(nodeTypes)\n        .filter((k) => !['input', 'default', 'output', 'group'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapNode((nodeTypes[key] || DefaultNode$1));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nconst getPositionWithOrigin = ({ x, y, width, height, origin, }) => {\n    if (!width || !height) {\n        return { x, y };\n    }\n    if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\n        return { x, y };\n    }\n    return {\n        x: x - width * origin[0],\n        y: y - height * origin[1],\n    };\n};\n\nconst doc = typeof document !== 'undefined' ? document : null;\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilites. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nvar useKeyPress = (keyCode = null, options = { target: doc }) => {\n    const [keyPressed, setKeyPressed] = useState(false);\n    // we need to remember if a modifier key is pressed in order to track it\n    const modifierPressed = useRef(false);\n    // we need to remember the pressed keys in order to support combinations\n    const pressedKeys = useRef(new Set([]));\n    // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n    // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n    // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n    // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n    // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n    // we can't find it in the list of keysToWatch.\n    const [keyCodes, keysToWatch] = useMemo(() => {\n        if (keyCode !== null) {\n            const keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n            const keys = keyCodeArr.filter((kc) => typeof kc === 'string').map((kc) => kc.split('+'));\n            const keysFlat = keys.reduce((res, item) => res.concat(...item), []);\n            return [keys, keysFlat];\n        }\n        return [[], []];\n    }, [keyCode]);\n    useEffect(() => {\n        if (keyCode !== null) {\n            const downHandler = (event) => {\n                modifierPressed.current = event.ctrlKey || event.metaKey || event.shiftKey;\n                if (!modifierPressed.current && isInputDOMNode(event)) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                pressedKeys.current.add(event[keyOrCode]);\n                if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n                    event.preventDefault();\n                    setKeyPressed(true);\n                }\n            };\n            const upHandler = (event) => {\n                if (!modifierPressed.current && isInputDOMNode(event)) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n                    setKeyPressed(false);\n                    pressedKeys.current.clear();\n                }\n                else {\n                    pressedKeys.current.delete(event[keyOrCode]);\n                }\n                modifierPressed.current = false;\n            };\n            const resetHandler = () => {\n                pressedKeys.current.clear();\n                setKeyPressed(false);\n            };\n            options?.target?.addEventListener('keydown', downHandler);\n            options?.target?.addEventListener('keyup', upHandler);\n            window.addEventListener('blur', resetHandler);\n            return () => {\n                options?.target?.removeEventListener('keydown', downHandler);\n                options?.target?.removeEventListener('keyup', upHandler);\n                window.removeEventListener('blur', resetHandler);\n            };\n        }\n    }, [keyCode, setKeyPressed]);\n    return keyPressed;\n};\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n    return (keyCodes\n        // we only want to compare same sizes of keyCode definitions\n        // and pressed keys. When the user specified 'Meta' as a key somewhere\n        // this would also be truthy without this filter when user presses 'Meta' + 'r'\n        .filter((keys) => isUp || keys.length === pressedKeys.size)\n        // since we want to support multiple possibilities only one of the\n        // combinations need to be part of the pressed keys\n        .some((keys) => keys.every((k) => pressedKeys.has(k))));\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n    return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\n\nfunction calculateXYZPosition(node, nodeInternals, result, nodeOrigin) {\n    if (!node.parentNode) {\n        return result;\n    }\n    const parentNode = nodeInternals.get(node.parentNode);\n    const parentNodePosition = getNodePositionWithOrigin(parentNode, nodeOrigin);\n    return calculateXYZPosition(parentNode, nodeInternals, {\n        x: (result.x ?? 0) + parentNodePosition.x,\n        y: (result.y ?? 0) + parentNodePosition.y,\n        z: (parentNode[internalsSymbol]?.z ?? 0) > (result.z ?? 0) ? parentNode[internalsSymbol]?.z ?? 0 : result.z ?? 0,\n    }, nodeOrigin);\n}\nfunction updateAbsoluteNodePositions(nodeInternals, nodeOrigin, parentNodes) {\n    nodeInternals.forEach((node) => {\n        if (node.parentNode && !nodeInternals.has(node.parentNode)) {\n            throw new Error(`Parent node ${node.parentNode} not found`);\n        }\n        if (node.parentNode || parentNodes?.[node.id]) {\n            const { x, y, z } = calculateXYZPosition(node, nodeInternals, {\n                ...node.position,\n                z: node[internalsSymbol]?.z ?? 0,\n            }, nodeOrigin);\n            node.positionAbsolute = {\n                x,\n                y,\n            };\n            node[internalsSymbol].z = z;\n            if (parentNodes?.[node.id]) {\n                node[internalsSymbol].isParent = true;\n            }\n        }\n    });\n}\nfunction createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) {\n    const nextNodeInternals = new Map();\n    const parentNodes = {};\n    const selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n    nodes.forEach((node) => {\n        const z = (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n        const currInternals = nodeInternals.get(node.id);\n        const internals = {\n            width: currInternals?.width,\n            height: currInternals?.height,\n            ...node,\n            positionAbsolute: {\n                x: node.position.x,\n                y: node.position.y,\n            },\n        };\n        if (node.parentNode) {\n            internals.parentNode = node.parentNode;\n            parentNodes[node.parentNode] = true;\n        }\n        Object.defineProperty(internals, internalsSymbol, {\n            enumerable: false,\n            value: {\n                handleBounds: currInternals?.[internalsSymbol]?.handleBounds,\n                z,\n            },\n        });\n        nextNodeInternals.set(node.id, internals);\n    });\n    updateAbsoluteNodePositions(nextNodeInternals, nodeOrigin, parentNodes);\n    return nextNodeInternals;\n}\nfunction fitView(get, options = {}) {\n    const { getNodes, width, height, minZoom, maxZoom, d3Zoom, d3Selection, fitViewOnInitDone, fitViewOnInit, nodeOrigin, } = get();\n    const isInitialFitView = options.initial && !fitViewOnInitDone && fitViewOnInit;\n    const d3initialized = d3Zoom && d3Selection;\n    if (d3initialized && (isInitialFitView || !options.initial)) {\n        const nodes = getNodes().filter((n) => {\n            const isVisible = options.includeHiddenNodes ? n.width && n.height : !n.hidden;\n            if (options.nodes?.length) {\n                return isVisible && options.nodes.some((optionNode) => optionNode.id === n.id);\n            }\n            return isVisible;\n        });\n        const nodesInitialized = nodes.every((n) => n.width && n.height);\n        if (nodes.length > 0 && nodesInitialized) {\n            const bounds = getRectOfNodes(nodes, nodeOrigin);\n            const [x, y, zoom] = getTransformForBounds(bounds, width, height, options.minZoom ?? minZoom, options.maxZoom ?? maxZoom, options.padding ?? 0.1);\n            const nextTransform = zoomIdentity.translate(x, y).scale(zoom);\n            if (typeof options.duration === 'number' && options.duration > 0) {\n                d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\n            }\n            else {\n                d3Zoom.transform(d3Selection, nextTransform);\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\n    nodeChanges.forEach((change) => {\n        const node = nodeInternals.get(change.id);\n        if (node) {\n            nodeInternals.set(node.id, {\n                ...node,\n                [internalsSymbol]: node[internalsSymbol],\n                selected: change.selected,\n            });\n        }\n    });\n    return new Map(nodeInternals);\n}\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\n    return edges.map((e) => {\n        const change = edgeChanges.find((change) => change.id === e.id);\n        if (change) {\n            e.selected = change.selected;\n        }\n        return e;\n    });\n}\nfunction updateNodesAndEdgesSelections({ changedNodes, changedEdges, get, set }) {\n    const { nodeInternals, edges, onNodesChange, onEdgesChange, hasDefaultNodes, hasDefaultEdges } = get();\n    if (changedNodes?.length) {\n        if (hasDefaultNodes) {\n            set({ nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals) });\n        }\n        onNodesChange?.(changedNodes);\n    }\n    if (changedEdges?.length) {\n        if (hasDefaultEdges) {\n            set({ edges: handleControlledEdgeSelectionChange(changedEdges, edges) });\n        }\n        onEdgesChange?.(changedEdges);\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => { };\nconst initialViewportHelper = {\n    zoomIn: noop,\n    zoomOut: noop,\n    zoomTo: noop,\n    getZoom: () => 1,\n    setViewport: noop,\n    getViewport: () => ({ x: 0, y: 0, zoom: 1 }),\n    fitView: () => false,\n    setCenter: noop,\n    fitBounds: noop,\n    project: (position) => position,\n    viewportInitialized: false,\n};\nconst selector$b = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n});\nconst useViewportHelper = () => {\n    const store = useStoreApi();\n    const { d3Zoom, d3Selection } = useStore(selector$b, shallow);\n    const viewportHelperFunctions = useMemo(() => {\n        if (d3Selection && d3Zoom) {\n            return {\n                zoomIn: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1.2),\n                zoomOut: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1 / 1.2),\n                zoomTo: (zoomLevel, options) => d3Zoom.scaleTo(getD3Transition(d3Selection, options?.duration), zoomLevel),\n                getZoom: () => store.getState().transform[2],\n                setViewport: (transform, options) => {\n                    const [x, y, zoom] = store.getState().transform;\n                    const nextTransform = zoomIdentity\n                        .translate(transform.x ?? x, transform.y ?? y)\n                        .scale(transform.zoom ?? zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), nextTransform);\n                },\n                getViewport: () => {\n                    const [x, y, zoom] = store.getState().transform;\n                    return { x, y, zoom };\n                },\n                fitView: (options) => fitView(store.getState, options),\n                setCenter: (x, y, options) => {\n                    const { width, height, maxZoom } = store.getState();\n                    const nextZoom = typeof options?.zoom !== 'undefined' ? options.zoom : maxZoom;\n                    const centerX = width / 2 - x * nextZoom;\n                    const centerY = height / 2 - y * nextZoom;\n                    const transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                fitBounds: (bounds, options) => {\n                    const { width, height, minZoom, maxZoom } = store.getState();\n                    const [x, y, zoom] = getTransformForBounds(bounds, width, height, minZoom, maxZoom, options?.padding ?? 0.1);\n                    const transform = zoomIdentity.translate(x, y).scale(zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                project: (position) => {\n                    const { transform, snapToGrid, snapGrid } = store.getState();\n                    return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\n                },\n                viewportInitialized: true,\n            };\n        }\n        return initialViewportHelper;\n    }, [d3Zoom, d3Selection]);\n    return viewportHelperFunctions;\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nfunction useReactFlow() {\n    const viewportHelper = useViewportHelper();\n    const store = useStoreApi();\n    const getNodes = useCallback(() => {\n        return store\n            .getState()\n            .getNodes()\n            .map((n) => ({ ...n }));\n    }, []);\n    const getNode = useCallback((id) => {\n        return store.getState().nodeInternals.get(id);\n    }, []);\n    const getEdges = useCallback(() => {\n        const { edges = [] } = store.getState();\n        return edges.map((e) => ({ ...e }));\n    }, []);\n    const getEdge = useCallback((id) => {\n        const { edges = [] } = store.getState();\n        return edges.find((e) => e.id === id);\n    }, []);\n    const setNodes = useCallback((payload) => {\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        const nodes = getNodes();\n        const nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\n        if (hasDefaultNodes) {\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nextNodes.length === 0\n                ? nodes.map((node) => ({ type: 'remove', id: node.id }))\n                : nextNodes.map((node) => ({ item: node, type: 'reset' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const setEdges = useCallback((payload) => {\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        const nextEdges = typeof payload === 'function' ? payload(edges) : payload;\n        if (hasDefaultEdges) {\n            setEdges(nextEdges);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.length === 0\n                ? edges.map((edge) => ({ type: 'remove', id: edge.id }))\n                : nextEdges.map((edge) => ({ item: edge, type: 'reset' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const addNodes = useCallback((payload) => {\n        const nodes = Array.isArray(payload) ? payload : [payload];\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        if (hasDefaultNodes) {\n            const currentNodes = getNodes();\n            const nextNodes = [...currentNodes, ...nodes];\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nodes.map((node) => ({ item: node, type: 'add' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const addEdges = useCallback((payload) => {\n        const nextEdges = Array.isArray(payload) ? payload : [payload];\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        if (hasDefaultEdges) {\n            setEdges([...edges, ...nextEdges]);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.map((edge) => ({ item: edge, type: 'add' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const toObject = useCallback(() => {\n        const { getNodes, edges = [], transform } = store.getState();\n        const [x, y, zoom] = transform;\n        return {\n            nodes: getNodes().map((n) => ({ ...n })),\n            edges: edges.map((e) => ({ ...e })),\n            viewport: {\n                x,\n                y,\n                zoom,\n            },\n        };\n    }, []);\n    const deleteElements = useCallback(({ nodes: nodesDeleted, edges: edgesDeleted }) => {\n        const { nodeInternals, getNodes, edges, hasDefaultNodes, hasDefaultEdges, onNodesDelete, onEdgesDelete, onNodesChange, onEdgesChange, } = store.getState();\n        const nodeIds = (nodesDeleted || []).map((node) => node.id);\n        const edgeIds = (edgesDeleted || []).map((edge) => edge.id);\n        const nodesToRemove = getNodes().reduce((res, node) => {\n            const parentHit = !nodeIds.includes(node.id) && node.parentNode && res.find((n) => n.id === node.parentNode);\n            const deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\n            if (deletable && (nodeIds.includes(node.id) || parentHit)) {\n                res.push(node);\n            }\n            return res;\n        }, []);\n        const deletableEdges = edges.filter((e) => (typeof e.deletable === 'boolean' ? e.deletable : true));\n        const initialHitEdges = deletableEdges.filter((e) => edgeIds.includes(e.id));\n        if (nodesToRemove || initialHitEdges) {\n            const connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\n            const edgesToRemove = [...initialHitEdges, ...connectedEdges];\n            const edgeIdsToRemove = edgesToRemove.reduce((res, edge) => {\n                if (!res.includes(edge.id)) {\n                    res.push(edge.id);\n                }\n                return res;\n            }, []);\n            if (hasDefaultEdges || hasDefaultNodes) {\n                if (hasDefaultEdges) {\n                    store.setState({\n                        edges: edges.filter((e) => !edgeIdsToRemove.includes(e.id)),\n                    });\n                }\n                if (hasDefaultNodes) {\n                    nodesToRemove.forEach((node) => {\n                        nodeInternals.delete(node.id);\n                    });\n                    store.setState({\n                        nodeInternals: new Map(nodeInternals),\n                    });\n                }\n            }\n            if (edgeIdsToRemove.length > 0) {\n                onEdgesDelete?.(edgesToRemove);\n                if (onEdgesChange) {\n                    onEdgesChange(edgeIdsToRemove.map((id) => ({\n                        id,\n                        type: 'remove',\n                    })));\n                }\n            }\n            if (nodesToRemove.length > 0) {\n                onNodesDelete?.(nodesToRemove);\n                if (onNodesChange) {\n                    const nodeChanges = nodesToRemove.map((n) => ({ id: n.id, type: 'remove' }));\n                    onNodesChange(nodeChanges);\n                }\n            }\n        }\n    }, []);\n    const getNodeRect = useCallback((nodeOrRect) => {\n        const isRect = isRectObject(nodeOrRect);\n        const node = isRect ? null : store.getState().nodeInternals.get(nodeOrRect.id);\n        const nodeRect = isRect ? nodeOrRect : nodeToRect(node);\n        return [nodeRect, node, isRect];\n    }, []);\n    const getIntersectingNodes = useCallback((nodeOrRect, partially = true, nodes) => {\n        const [nodeRect, node, isRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return [];\n        }\n        return (nodes || store.getState().getNodes()).filter((n) => {\n            if (!isRect && (n.id === node.id || !n.positionAbsolute)) {\n                return false;\n            }\n            const currNodeRect = nodeToRect(n);\n            const overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n            const partiallyVisible = partially && overlappingArea > 0;\n            return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n        });\n    }, []);\n    const isNodeIntersecting = useCallback((nodeOrRect, area, partially = true) => {\n        const [nodeRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return false;\n        }\n        const overlappingArea = getOverlappingArea(nodeRect, area);\n        const partiallyVisible = partially && overlappingArea > 0;\n        return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n    }, []);\n    return useMemo(() => {\n        return {\n            ...viewportHelper,\n            getNodes,\n            getNode,\n            getEdges,\n            getEdge,\n            setNodes,\n            setEdges,\n            addNodes,\n            addEdges,\n            toObject,\n            deleteElements,\n            getIntersectingNodes,\n            isNodeIntersecting,\n        };\n    }, [\n        viewportHelper,\n        getNodes,\n        getNode,\n        getEdges,\n        getEdge,\n        setNodes,\n        setEdges,\n        addNodes,\n        addEdges,\n        toObject,\n        deleteElements,\n        getIntersectingNodes,\n        isNodeIntersecting,\n    ]);\n}\n\nvar useGlobalKeyHandler = ({ deleteKeyCode, multiSelectionKeyCode }) => {\n    const store = useStoreApi();\n    const { deleteElements } = useReactFlow();\n    const deleteKeyPressed = useKeyPress(deleteKeyCode);\n    const multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\n    useEffect(() => {\n        if (deleteKeyPressed) {\n            const { edges, getNodes } = store.getState();\n            const selectedNodes = getNodes().filter((node) => node.selected);\n            const selectedEdges = edges.filter((edge) => edge.selected);\n            deleteElements({ nodes: selectedNodes, edges: selectedEdges });\n            store.setState({ nodesSelectionActive: false });\n        }\n    }, [deleteKeyPressed]);\n    useEffect(() => {\n        store.setState({ multiSelectionActive: multiSelectionKeyPressed });\n    }, [multiSelectionKeyPressed]);\n};\n\nfunction useResizeHandler(rendererNode) {\n    const store = useStoreApi();\n    useEffect(() => {\n        let resizeObserver;\n        const updateDimensions = () => {\n            if (!rendererNode.current) {\n                return;\n            }\n            const size = getDimensions(rendererNode.current);\n            if (size.height === 0 || size.width === 0) {\n                store.getState().onError?.('004', errorMessages['error004']());\n            }\n            store.setState({ width: size.width || 500, height: size.height || 500 });\n        };\n        updateDimensions();\n        window.addEventListener('resize', updateDimensions);\n        if (rendererNode.current) {\n            resizeObserver = new ResizeObserver(() => updateDimensions());\n            resizeObserver.observe(rendererNode.current);\n        }\n        return () => {\n            window.removeEventListener('resize', updateDimensions);\n            if (resizeObserver && rendererNode.current) {\n                resizeObserver.unobserve(rendererNode.current);\n            }\n        };\n    }, []);\n}\n\nconst containerStyle = {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n};\n\nconst viewChanged = (prevViewport, eventViewport) => prevViewport.x !== eventViewport.x || prevViewport.y !== eventViewport.y || prevViewport.zoom !== eventViewport.k;\nconst eventToFlowTransform = (eventViewport) => ({\n    x: eventViewport.x,\n    y: eventViewport.y,\n    zoom: eventViewport.k,\n});\nconst isWrappedWithClass = (event, className) => event.target.closest(`.${className}`);\nconst isRightClickPan = (panOnDrag, usedButton) => usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\nconst selector$a = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n    d3ZoomHandler: s.d3ZoomHandler,\n    userSelectionActive: s.userSelectionActive,\n});\nconst ZoomPane = ({ onMove, onMoveStart, onMoveEnd, onPaneContextMenu, zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, elementsSelectable, panOnDrag = true, defaultViewport, translateExtent, minZoom, maxZoom, zoomActivationKeyCode, preventScrolling = true, children, noWheelClassName, noPanClassName, }) => {\n    const timerId = useRef();\n    const store = useStoreApi();\n    const isZoomingOrPanning = useRef(false);\n    const zoomedWithRightMouseButton = useRef(false);\n    const zoomPane = useRef(null);\n    const prevTransform = useRef({ x: 0, y: 0, zoom: 0 });\n    const { d3Zoom, d3Selection, d3ZoomHandler, userSelectionActive } = useStore(selector$a, shallow);\n    const zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n    const mouseButton = useRef(0);\n    useResizeHandler(zoomPane);\n    useEffect(() => {\n        if (zoomPane.current) {\n            const bbox = zoomPane.current.getBoundingClientRect();\n            const d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\n            const selection = select(zoomPane.current).call(d3ZoomInstance);\n            const updatedTransform = zoomIdentity\n                .translate(defaultViewport.x, defaultViewport.y)\n                .scale(clamp(defaultViewport.zoom, minZoom, maxZoom));\n            const extent = [\n                [0, 0],\n                [bbox.width, bbox.height],\n            ];\n            const constrainedTransform = d3ZoomInstance.constrain()(updatedTransform, extent, translateExtent);\n            d3ZoomInstance.transform(selection, constrainedTransform);\n            store.setState({\n                d3Zoom: d3ZoomInstance,\n                d3Selection: selection,\n                d3ZoomHandler: selection.on('wheel.zoom'),\n                // we need to pass transform because zoom handler is not registered when we set the initial transform\n                transform: [constrainedTransform.x, constrainedTransform.y, constrainedTransform.k],\n                domNode: zoomPane.current.closest('.react-flow'),\n            });\n        }\n    }, []);\n    useEffect(() => {\n        if (d3Selection && d3Zoom) {\n            if (panOnScroll && !zoomActivationKeyPressed && !userSelectionActive) {\n                d3Selection.on('wheel.zoom', (event) => {\n                    if (isWrappedWithClass(event, noWheelClassName)) {\n                        return false;\n                    }\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n                    const currentZoom = d3Selection.property('__zoom').k || 1;\n                    if (event.ctrlKey && zoomOnPinch) {\n                        const point = pointer(event);\n                        // taken from https://github.com/d3/d3-zoom/blob/master/src/zoom.js\n                        const pinchDelta = -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * 10;\n                        const zoom = currentZoom * Math.pow(2, pinchDelta);\n                        d3Zoom.scaleTo(d3Selection, zoom, point);\n                        return;\n                    }\n                    // increase scroll speed in firefox\n                    // firefox: deltaMode === 1; chrome: deltaMode === 0\n                    const deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n                    const deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n                    const deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n                    d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed);\n                }, { passive: false });\n            }\n            else if (typeof d3ZoomHandler !== 'undefined') {\n                d3Selection.on('wheel.zoom', function (event, d) {\n                    if (!preventScrolling || isWrappedWithClass(event, noWheelClassName)) {\n                        return null;\n                    }\n                    event.preventDefault();\n                    d3ZoomHandler.call(this, event, d);\n                }, { passive: false });\n            }\n        }\n    }, [\n        userSelectionActive,\n        panOnScroll,\n        panOnScrollMode,\n        d3Selection,\n        d3Zoom,\n        d3ZoomHandler,\n        zoomActivationKeyPressed,\n        zoomOnPinch,\n        preventScrolling,\n        noWheelClassName,\n    ]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('start', (event) => {\n                if (!event.sourceEvent) {\n                    return null;\n                }\n                // we need to remember it here, because it's always 0 in the \"zoom\" event\n                mouseButton.current = event.sourceEvent.button;\n                const { onViewportChangeStart } = store.getState();\n                isZoomingOrPanning.current = true;\n                if (event.sourceEvent?.type === 'mousedown') {\n                    store.setState({ paneDragging: true });\n                }\n                if (onMoveStart || onViewportChangeStart) {\n                    const flowTransform = eventToFlowTransform(event.transform);\n                    prevTransform.current = flowTransform;\n                    onViewportChangeStart?.(flowTransform);\n                    onMoveStart?.(event.sourceEvent, flowTransform);\n                }\n            });\n        }\n    }, [d3Zoom, onMoveStart]);\n    useEffect(() => {\n        if (d3Zoom) {\n            if (userSelectionActive && !isZoomingOrPanning.current) {\n                d3Zoom.on('zoom', null);\n            }\n            else if (!userSelectionActive) {\n                d3Zoom.on('zoom', (event) => {\n                    const { onViewportChange } = store.getState();\n                    store.setState({ transform: [event.transform.x, event.transform.y, event.transform.k] });\n                    zoomedWithRightMouseButton.current = !!(onPaneContextMenu && isRightClickPan(panOnDrag, mouseButton.current ?? 0));\n                    if (onMove || onViewportChange) {\n                        const flowTransform = eventToFlowTransform(event.transform);\n                        onViewportChange?.(flowTransform);\n                        onMove?.(event.sourceEvent, flowTransform);\n                    }\n                });\n            }\n        }\n    }, [userSelectionActive, d3Zoom, onMove, panOnDrag, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('end', (event) => {\n                if (!event.sourceEvent) {\n                    return null;\n                }\n                const { onViewportChangeEnd } = store.getState();\n                isZoomingOrPanning.current = false;\n                store.setState({ paneDragging: false });\n                if (onPaneContextMenu &&\n                    isRightClickPan(panOnDrag, mouseButton.current ?? 0) &&\n                    !zoomedWithRightMouseButton.current) {\n                    onPaneContextMenu(event.sourceEvent);\n                }\n                zoomedWithRightMouseButton.current = false;\n                if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\n                    const flowTransform = eventToFlowTransform(event.transform);\n                    prevTransform.current = flowTransform;\n                    clearTimeout(timerId.current);\n                    timerId.current = setTimeout(() => {\n                        onViewportChangeEnd?.(flowTransform);\n                        onMoveEnd?.(event.sourceEvent, flowTransform);\n                    }, panOnScroll ? 150 : 0);\n                }\n            });\n        }\n    }, [d3Zoom, panOnScroll, panOnDrag, onMoveEnd, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.filter((event) => {\n                const zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n                const pinchZoom = zoomOnPinch && event.ctrlKey;\n                if (event.button === 1 &&\n                    event.type === 'mousedown' &&\n                    (isWrappedWithClass(event, 'react-flow__node') || isWrappedWithClass(event, 'react-flow__edge'))) {\n                    return true;\n                }\n                // if all interactions are disabled, we prevent all zoom events\n                if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n                    return false;\n                }\n                // during a selection we prevent all other interactions\n                if (userSelectionActive) {\n                    return false;\n                }\n                // if zoom on double click is disabled, we prevent the double click event\n                if (!zoomOnDoubleClick && event.type === 'dblclick') {\n                    return false;\n                }\n                // if the target element is inside an element with the nowheel class, we prevent zooming\n                if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n                    return false;\n                }\n                // if the target element is inside an element with the nopan class, we prevent panning\n                if (isWrappedWithClass(event, noPanClassName) && event.type !== 'wheel') {\n                    return false;\n                }\n                if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n                    return false;\n                }\n                // when there is no scroll handling enabled, we prevent all wheel events\n                if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n                    return false;\n                }\n                // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n                if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n                    return false;\n                }\n                // if the pane is only movable using allowed clicks\n                if (Array.isArray(panOnDrag) &&\n                    !panOnDrag.includes(event.button) &&\n                    (event.type === 'mousedown' || event.type === 'touchstart')) {\n                    return false;\n                }\n                // We only allow right clicks if pan on drag is set to right click\n                const buttonAllowed = (Array.isArray(panOnDrag) && panOnDrag.includes(event.button)) || !event.button || event.button <= 1;\n                // default filter for d3-zoom\n                return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\n            });\n        }\n    }, [\n        userSelectionActive,\n        d3Zoom,\n        zoomOnScroll,\n        zoomOnPinch,\n        panOnScroll,\n        zoomOnDoubleClick,\n        panOnDrag,\n        elementsSelectable,\n        zoomActivationKeyPressed,\n    ]);\n    return (jsx(\"div\", { className: \"react-flow__renderer\", ref: zoomPane, style: containerStyle, children: children }));\n};\n\nconst selector$9 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    userSelectionRect: s.userSelectionRect,\n});\nfunction UserSelection() {\n    const { userSelectionActive, userSelectionRect } = useStore(selector$9, shallow);\n    const isActive = userSelectionActive && userSelectionRect;\n    if (!isActive) {\n        return null;\n    }\n    return (jsx(\"div\", { className: \"react-flow__selection react-flow__container\", style: {\n            width: userSelectionRect.width,\n            height: userSelectionRect.height,\n            transform: `translate(${userSelectionRect.x}px, ${userSelectionRect.y}px)`,\n        } }));\n}\n\nfunction handleParentExpand(res, updateItem) {\n    const parent = res.find((e) => e.id === updateItem.parentNode);\n    if (parent) {\n        const extendWidth = updateItem.position.x + updateItem.width - parent.width;\n        const extendHeight = updateItem.position.y + updateItem.height - parent.height;\n        if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\n            parent.style = { ...parent.style } || {};\n            parent.style.width = parent.style.width ?? parent.width;\n            parent.style.height = parent.style.height ?? parent.height;\n            if (extendWidth > 0) {\n                parent.style.width += extendWidth;\n            }\n            if (extendHeight > 0) {\n                parent.style.height += extendHeight;\n            }\n            if (updateItem.position.x < 0) {\n                const xDiff = Math.abs(updateItem.position.x);\n                parent.position.x = parent.position.x - xDiff;\n                parent.style.width += xDiff;\n                updateItem.position.x = 0;\n            }\n            if (updateItem.position.y < 0) {\n                const yDiff = Math.abs(updateItem.position.y);\n                parent.position.y = parent.position.y - yDiff;\n                parent.style.height += yDiff;\n                updateItem.position.y = 0;\n            }\n            parent.width = parent.style.width;\n            parent.height = parent.style.height;\n        }\n    }\n}\nfunction applyChanges(changes, elements) {\n    // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\n    if (changes.some((c) => c.type === 'reset')) {\n        return changes.filter((c) => c.type === 'reset').map((c) => c.item);\n    }\n    const initElements = changes.filter((c) => c.type === 'add').map((c) => c.item);\n    return elements.reduce((res, item) => {\n        const currentChanges = changes.filter((c) => c.id === item.id);\n        if (currentChanges.length === 0) {\n            res.push(item);\n            return res;\n        }\n        const updateItem = { ...item };\n        for (const currentChange of currentChanges) {\n            if (currentChange) {\n                switch (currentChange.type) {\n                    case 'select': {\n                        updateItem.selected = currentChange.selected;\n                        break;\n                    }\n                    case 'position': {\n                        if (typeof currentChange.position !== 'undefined') {\n                            updateItem.position = currentChange.position;\n                        }\n                        if (typeof currentChange.positionAbsolute !== 'undefined') {\n                            updateItem.positionAbsolute = currentChange.positionAbsolute;\n                        }\n                        if (typeof currentChange.dragging !== 'undefined') {\n                            updateItem.dragging = currentChange.dragging;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'dimensions': {\n                        if (typeof currentChange.dimensions !== 'undefined') {\n                            updateItem.width = currentChange.dimensions.width;\n                            updateItem.height = currentChange.dimensions.height;\n                        }\n                        if (typeof currentChange.updateStyle !== 'undefined') {\n                            updateItem.style = { ...(updateItem.style || {}), ...currentChange.dimensions };\n                        }\n                        if (typeof currentChange.resizing === 'boolean') {\n                            updateItem.resizing = currentChange.resizing;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'remove': {\n                        return res;\n                    }\n                }\n            }\n        }\n        res.push(updateItem);\n        return res;\n    }, initElements);\n}\nfunction applyNodeChanges(changes, nodes) {\n    return applyChanges(changes, nodes);\n}\nfunction applyEdgeChanges(changes, edges) {\n    return applyChanges(changes, edges);\n}\nconst createSelectionChange = (id, selected) => ({\n    id,\n    type: 'select',\n    selected,\n});\nfunction getSelectionChanges(items, selectedIds) {\n    return items.reduce((res, item) => {\n        const willBeSelected = selectedIds.includes(item.id);\n        if (!item.selected && willBeSelected) {\n            item.selected = true;\n            res.push(createSelectionChange(item.id, true));\n        }\n        else if (item.selected && !willBeSelected) {\n            item.selected = false;\n            res.push(createSelectionChange(item.id, false));\n        }\n        return res;\n    }, []);\n}\n\nconst wrapHandler = (handler, containerRef) => {\n    return (event) => {\n        if (event.target !== containerRef.current) {\n            return;\n        }\n        handler?.(event);\n    };\n};\nconst selector$8 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    elementsSelectable: s.elementsSelectable,\n    dragging: s.paneDragging,\n});\nconst Pane = memo(({ isSelecting, selectionMode = SelectionMode.Full, panOnDrag, onSelectionStart, onSelectionEnd, onPaneClick, onPaneContextMenu, onPaneScroll, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, children, }) => {\n    const container = useRef(null);\n    const store = useStoreApi();\n    const prevSelectedNodesCount = useRef(0);\n    const prevSelectedEdgesCount = useRef(0);\n    const containerBounds = useRef();\n    const { userSelectionActive, elementsSelectable, dragging } = useStore(selector$8, shallow);\n    const resetUserSelection = () => {\n        store.setState({ userSelectionActive: false, userSelectionRect: null });\n        prevSelectedNodesCount.current = 0;\n        prevSelectedEdgesCount.current = 0;\n    };\n    const onClick = (event) => {\n        onPaneClick?.(event);\n        store.getState().resetSelectedElements();\n        store.setState({ nodesSelectionActive: false });\n    };\n    const onContextMenu = (event) => {\n        if (Array.isArray(panOnDrag) && panOnDrag?.includes(2)) {\n            event.preventDefault();\n            return;\n        }\n        onPaneContextMenu?.(event);\n    };\n    const onWheel = onPaneScroll ? (event) => onPaneScroll(event) : undefined;\n    const onMouseDown = (event) => {\n        const { resetSelectedElements, domNode } = store.getState();\n        containerBounds.current = domNode?.getBoundingClientRect();\n        if (!elementsSelectable ||\n            !isSelecting ||\n            event.button !== 0 ||\n            event.target !== container.current ||\n            !containerBounds.current) {\n            return;\n        }\n        const { x, y } = getEventPosition(event, containerBounds.current);\n        resetSelectedElements();\n        store.setState({\n            userSelectionRect: {\n                width: 0,\n                height: 0,\n                startX: x,\n                startY: y,\n                x,\n                y,\n            },\n        });\n        onSelectionStart?.(event);\n    };\n    const onMouseMove = (event) => {\n        const { userSelectionRect, nodeInternals, edges, transform, onNodesChange, onEdgesChange, nodeOrigin, getNodes } = store.getState();\n        if (!isSelecting || !containerBounds.current || !userSelectionRect) {\n            return;\n        }\n        store.setState({ userSelectionActive: true, nodesSelectionActive: false });\n        const mousePos = getEventPosition(event, containerBounds.current);\n        const startX = userSelectionRect.startX ?? 0;\n        const startY = userSelectionRect.startY ?? 0;\n        const nextUserSelectRect = {\n            ...userSelectionRect,\n            x: mousePos.x < startX ? mousePos.x : startX,\n            y: mousePos.y < startY ? mousePos.y : startY,\n            width: Math.abs(mousePos.x - startX),\n            height: Math.abs(mousePos.y - startY),\n        };\n        const nodes = getNodes();\n        const selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true, nodeOrigin);\n        const selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map((e) => e.id);\n        const selectedNodeIds = selectedNodes.map((n) => n.id);\n        if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\n            prevSelectedNodesCount.current = selectedNodeIds.length;\n            const changes = getSelectionChanges(nodes, selectedNodeIds);\n            if (changes.length) {\n                onNodesChange?.(changes);\n            }\n        }\n        if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\n            prevSelectedEdgesCount.current = selectedEdgeIds.length;\n            const changes = getSelectionChanges(edges, selectedEdgeIds);\n            if (changes.length) {\n                onEdgesChange?.(changes);\n            }\n        }\n        store.setState({\n            userSelectionRect: nextUserSelectRect,\n        });\n    };\n    const onMouseUp = (event) => {\n        if (event.button !== 0) {\n            return;\n        }\n        const { userSelectionRect } = store.getState();\n        // We only want to trigger click functions when in selection mode if\n        // the user did not move the mouse.\n        if (!userSelectionActive && userSelectionRect && event.target === container.current) {\n            onClick?.(event);\n        }\n        store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n        resetUserSelection();\n        onSelectionEnd?.(event);\n    };\n    const onMouseLeave = (event) => {\n        if (userSelectionActive) {\n            store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n            onSelectionEnd?.(event);\n        }\n        resetUserSelection();\n    };\n    const hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\n    return (jsxs(\"div\", { className: cc(['react-flow__pane', { dragging, selection: isSelecting }]), onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container), onContextMenu: wrapHandler(onContextMenu, container), onWheel: wrapHandler(onWheel, container), onMouseEnter: hasActiveSelection ? undefined : onPaneMouseEnter, onMouseDown: hasActiveSelection ? onMouseDown : undefined, onMouseMove: hasActiveSelection ? onMouseMove : onPaneMouseMove, onMouseUp: hasActiveSelection ? onMouseUp : undefined, onMouseLeave: hasActiveSelection ? onMouseLeave : onPaneMouseLeave, ref: container, style: containerStyle, children: [children, jsx(UserSelection, {})] }));\n});\nPane.displayName = 'Pane';\n\nconst selector$7 = (s) => {\n    const selectedNodes = s.getNodes().filter((n) => n.selected);\n    return {\n        ...getRectOfNodes(selectedNodes, s.nodeOrigin),\n        transformString: `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`,\n        userSelectionActive: s.userSelectionActive,\n    };\n};\nfunction NodesSelection({ onSelectionContextMenu, noPanClassName, disableKeyboardA11y }) {\n    const store = useStoreApi();\n    const { width, height, x: left, y: top, transformString, userSelectionActive } = useStore(selector$7, shallow);\n    const updatePositions = useUpdateNodePositions();\n    const nodeRef = useRef(null);\n    useEffect(() => {\n        if (!disableKeyboardA11y) {\n            nodeRef.current?.focus({\n                preventScroll: true,\n            });\n        }\n    }, [disableKeyboardA11y]);\n    useDrag({\n        nodeRef,\n    });\n    if (userSelectionActive || !width || !height) {\n        return null;\n    }\n    const onContextMenu = onSelectionContextMenu\n        ? (event) => {\n            const selectedNodes = store\n                .getState()\n                .getNodes()\n                .filter((n) => n.selected);\n            onSelectionContextMenu(event, selectedNodes);\n        }\n        : undefined;\n    const onKeyDown = (event) => {\n        if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n            updatePositions({\n                x: arrowKeyDiffs[event.key].x,\n                y: arrowKeyDiffs[event.key].y,\n                isShiftPressed: event.shiftKey,\n            });\n        }\n    };\n    return (jsx(\"div\", { className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]), style: {\n            transform: transformString,\n        }, children: jsx(\"div\", { ref: nodeRef, className: \"react-flow__nodesselection-rect\", onContextMenu: onContextMenu, tabIndex: disableKeyboardA11y ? undefined : -1, onKeyDown: disableKeyboardA11y ? undefined : onKeyDown, style: {\n                width,\n                height,\n                top,\n                left,\n            } }) }));\n}\nvar NodesSelection$1 = memo(NodesSelection);\n\nconst selector$6 = (s) => s.nodesSelectionActive;\nconst FlowRenderer = ({ children, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneContextMenu, onPaneScroll, deleteKeyCode, onMove, onMoveStart, onMoveEnd, selectionKeyCode, selectionOnDrag, selectionMode, onSelectionStart, onSelectionEnd, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, elementsSelectable, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag: _panOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, onSelectionContextMenu, noWheelClassName, noPanClassName, disableKeyboardA11y, }) => {\n    const nodesSelectionActive = useStore(selector$6);\n    const selectionKeyPressed = useKeyPress(selectionKeyCode);\n    const panActivationKeyPressed = useKeyPress(panActivationKeyCode);\n    const panOnDrag = panActivationKeyPressed || _panOnDrag;\n    const isSelecting = selectionKeyPressed || (selectionOnDrag && panOnDrag !== true);\n    useGlobalKeyHandler({ deleteKeyCode, multiSelectionKeyCode });\n    return (jsx(ZoomPane, { onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onPaneContextMenu: onPaneContextMenu, elementsSelectable: elementsSelectable, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, zoomOnDoubleClick: zoomOnDoubleClick, panOnDrag: !selectionKeyPressed && panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, zoomActivationKeyCode: zoomActivationKeyCode, preventScrolling: preventScrolling, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, children: jsxs(Pane, { onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, panOnDrag: panOnDrag, isSelecting: !!isSelecting, selectionMode: selectionMode, children: [children, nodesSelectionActive && (jsx(NodesSelection$1, { onSelectionContextMenu: onSelectionContextMenu, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y }))] }) }));\n};\nFlowRenderer.displayName = 'FlowRenderer';\nvar FlowRenderer$1 = memo(FlowRenderer);\n\nfunction useVisibleNodes(onlyRenderVisible) {\n    const nodes = useStore(useCallback((s) => onlyRenderVisible\n        ? getNodesInside(s.nodeInternals, { x: 0, y: 0, width: s.width, height: s.height }, s.transform, true)\n        : s.getNodes(), [onlyRenderVisible]));\n    return nodes;\n}\n\nconst selector$5 = (s) => ({\n    nodesDraggable: s.nodesDraggable,\n    nodesConnectable: s.nodesConnectable,\n    nodesFocusable: s.nodesFocusable,\n    elementsSelectable: s.elementsSelectable,\n    updateNodeDimensions: s.updateNodeDimensions,\n    onError: s.onError,\n});\nconst NodeRenderer = (props) => {\n    const { nodesDraggable, nodesConnectable, nodesFocusable, elementsSelectable, updateNodeDimensions, onError } = useStore(selector$5, shallow);\n    const nodes = useVisibleNodes(props.onlyRenderVisibleElements);\n    const resizeObserverRef = useRef();\n    const resizeObserver = useMemo(() => {\n        if (typeof ResizeObserver === 'undefined') {\n            return null;\n        }\n        const observer = new ResizeObserver((entries) => {\n            const updates = entries.map((entry) => ({\n                id: entry.target.getAttribute('data-id'),\n                nodeElement: entry.target,\n                forceUpdate: true,\n            }));\n            updateNodeDimensions(updates);\n        });\n        resizeObserverRef.current = observer;\n        return observer;\n    }, []);\n    useEffect(() => {\n        return () => {\n            resizeObserverRef?.current?.disconnect();\n        };\n    }, []);\n    return (jsx(\"div\", { className: \"react-flow__nodes\", style: containerStyle, children: nodes.map((node) => {\n            let nodeType = node.type || 'default';\n            if (!props.nodeTypes[nodeType]) {\n                onError?.('003', errorMessages['error003'](nodeType));\n                nodeType = 'default';\n            }\n            const NodeComponent = (props.nodeTypes[nodeType] || props.nodeTypes.default);\n            const isDraggable = !!(node.draggable || (nodesDraggable && typeof node.draggable === 'undefined'));\n            const isSelectable = !!(node.selectable || (elementsSelectable && typeof node.selectable === 'undefined'));\n            const isConnectable = !!(node.connectable || (nodesConnectable && typeof node.connectable === 'undefined'));\n            const isFocusable = !!(node.focusable || (nodesFocusable && typeof node.focusable === 'undefined'));\n            const clampedPosition = props.nodeExtent\n                ? clampPosition(node.positionAbsolute, props.nodeExtent)\n                : node.positionAbsolute;\n            const posX = clampedPosition?.x ?? 0;\n            const posY = clampedPosition?.y ?? 0;\n            const posOrigin = getPositionWithOrigin({\n                x: posX,\n                y: posY,\n                width: node.width ?? 0,\n                height: node.height ?? 0,\n                origin: props.nodeOrigin,\n            });\n            return (jsx(NodeComponent, { id: node.id, className: node.className, style: node.style, type: nodeType, data: node.data, sourcePosition: node.sourcePosition || Position.Bottom, targetPosition: node.targetPosition || Position.Top, hidden: node.hidden, xPos: posX, yPos: posY, xPosOrigin: posOrigin.x, yPosOrigin: posOrigin.y, selectNodesOnDrag: props.selectNodesOnDrag, onClick: props.onNodeClick, onMouseEnter: props.onNodeMouseEnter, onMouseMove: props.onNodeMouseMove, onMouseLeave: props.onNodeMouseLeave, onContextMenu: props.onNodeContextMenu, onDoubleClick: props.onNodeDoubleClick, selected: !!node.selected, isDraggable: isDraggable, isSelectable: isSelectable, isConnectable: isConnectable, isFocusable: isFocusable, resizeObserver: resizeObserver, dragHandle: node.dragHandle, zIndex: node[internalsSymbol]?.z ?? 0, isParent: !!node[internalsSymbol]?.isParent, noDragClassName: props.noDragClassName, noPanClassName: props.noPanClassName, initialized: !!node.width && !!node.height, rfId: props.rfId, disableKeyboardA11y: props.disableKeyboardA11y, ariaLabel: node.ariaLabel }, node.id));\n        }) }));\n};\nNodeRenderer.displayName = 'NodeRenderer';\nvar NodeRenderer$1 = memo(NodeRenderer);\n\nconst defaultEdgeTree = [{ level: 0, isMaxLevel: true, edges: [] }];\nfunction groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect = false) {\n    let maxLevel = -1;\n    const levelLookup = edges.reduce((tree, edge) => {\n        const hasZIndex = isNumeric(edge.zIndex);\n        let z = hasZIndex ? edge.zIndex : 0;\n        if (elevateEdgesOnSelect) {\n            z = hasZIndex\n                ? edge.zIndex\n                : Math.max(nodeInternals.get(edge.source)?.[internalsSymbol]?.z || 0, nodeInternals.get(edge.target)?.[internalsSymbol]?.z || 0);\n        }\n        if (tree[z]) {\n            tree[z].push(edge);\n        }\n        else {\n            tree[z] = [edge];\n        }\n        maxLevel = z > maxLevel ? z : maxLevel;\n        return tree;\n    }, {});\n    const edgeTree = Object.entries(levelLookup).map(([key, edges]) => {\n        const level = +key;\n        return {\n            edges,\n            level,\n            isMaxLevel: level === maxLevel,\n        };\n    });\n    if (edgeTree.length === 0) {\n        return defaultEdgeTree;\n    }\n    return edgeTree;\n}\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\n    const edges = useStore(useCallback((s) => {\n        if (!onlyRenderVisible) {\n            return s.edges;\n        }\n        return s.edges.filter((e) => {\n            const sourceNode = nodeInternals.get(e.source);\n            const targetNode = nodeInternals.get(e.target);\n            return (sourceNode?.width &&\n                sourceNode?.height &&\n                targetNode?.width &&\n                targetNode?.height &&\n                isEdgeVisible({\n                    sourcePos: sourceNode.positionAbsolute || { x: 0, y: 0 },\n                    targetPos: targetNode.positionAbsolute || { x: 0, y: 0 },\n                    sourceWidth: sourceNode.width,\n                    sourceHeight: sourceNode.height,\n                    targetWidth: targetNode.width,\n                    targetHeight: targetNode.height,\n                    width: s.width,\n                    height: s.height,\n                    transform: s.transform,\n                }));\n        });\n    }, [onlyRenderVisible, nodeInternals]));\n    return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\n}\n\nconst ArrowSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (jsx(\"polyline\", { stroke: color, strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: strokeWidth, fill: \"none\", points: \"-5,-4 0,0 -5,4\" }));\n};\nconst ArrowClosedSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (jsx(\"polyline\", { stroke: color, strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: strokeWidth, fill: color, points: \"-5,-4 0,0 -5,4 -5,-4\" }));\n};\nconst MarkerSymbols = {\n    [MarkerType.Arrow]: ArrowSymbol,\n    [MarkerType.ArrowClosed]: ArrowClosedSymbol,\n};\nfunction useMarkerSymbol(type) {\n    const store = useStoreApi();\n    const symbol = useMemo(() => {\n        const symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n        if (!symbolExists) {\n            store.getState().onError?.('009', errorMessages['error009'](type));\n            return null;\n        }\n        return MarkerSymbols[type];\n    }, [type]);\n    return symbol;\n}\n\nconst Marker = ({ id, type, color, width = 12.5, height = 12.5, markerUnits = 'strokeWidth', strokeWidth, orient = 'auto-start-reverse', }) => {\n    const Symbol = useMarkerSymbol(type);\n    if (!Symbol) {\n        return null;\n    }\n    return (jsx(\"marker\", { className: \"react-flow__arrowhead\", id: id, markerWidth: `${width}`, markerHeight: `${height}`, viewBox: \"-10 -10 20 20\", markerUnits: markerUnits, orient: orient, refX: \"0\", refY: \"0\", children: jsx(Symbol, { color: color, strokeWidth: strokeWidth }) }));\n};\nconst markerSelector = ({ defaultColor, rfId }) => (s) => {\n    const ids = [];\n    return s.edges\n        .reduce((markers, edge) => {\n        [edge.markerStart, edge.markerEnd].forEach((marker) => {\n            if (marker && typeof marker === 'object') {\n                const markerId = getMarkerId(marker, rfId);\n                if (!ids.includes(markerId)) {\n                    markers.push({ id: markerId, color: marker.color || defaultColor, ...marker });\n                    ids.push(markerId);\n                }\n            }\n        });\n        return markers;\n    }, [])\n        .sort((a, b) => a.id.localeCompare(b.id));\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nconst MarkerDefinitions = ({ defaultColor, rfId }) => {\n    const markers = useStore(useCallback(markerSelector({ defaultColor, rfId }), [defaultColor, rfId]), \n    // the id includes all marker options, so we just need to look at that part of the marker\n    (a, b) => !(a.length !== b.length || a.some((m, i) => m.id !== b[i].id)));\n    return (jsx(\"defs\", { children: markers.map((marker) => (jsx(Marker, { id: marker.id, type: marker.type, color: marker.color, width: marker.width, height: marker.height, markerUnits: marker.markerUnits, strokeWidth: marker.strokeWidth, orient: marker.orient }, marker.id))) }));\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\n\nconst selector$4 = (s) => ({\n    nodesConnectable: s.nodesConnectable,\n    edgesFocusable: s.edgesFocusable,\n    edgesUpdatable: s.edgesUpdatable,\n    elementsSelectable: s.elementsSelectable,\n    width: s.width,\n    height: s.height,\n    connectionMode: s.connectionMode,\n    nodeInternals: s.nodeInternals,\n    onError: s.onError,\n});\nconst EdgeRenderer = ({ defaultMarkerColor, onlyRenderVisibleElements, elevateEdgesOnSelect, rfId, edgeTypes, noPanClassName, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeClick, edgeUpdaterRadius, onEdgeDoubleClick, onEdgeUpdateStart, onEdgeUpdateEnd, children, }) => {\n    const { edgesFocusable, edgesUpdatable, elementsSelectable, width, height, connectionMode, nodeInternals, onError } = useStore(selector$4, shallow);\n    const edgeTree = useVisibleEdges(onlyRenderVisibleElements, nodeInternals, elevateEdgesOnSelect);\n    if (!width) {\n        return null;\n    }\n    return (jsxs(Fragment, { children: [edgeTree.map(({ level, edges, isMaxLevel }) => (jsxs(\"svg\", { style: { zIndex: level }, width: width, height: height, className: \"react-flow__edges react-flow__container\", children: [isMaxLevel && jsx(MarkerDefinitions$1, { defaultColor: defaultMarkerColor, rfId: rfId }), jsx(\"g\", { children: edges.map((edge) => {\n                            const [sourceNodeRect, sourceHandleBounds, sourceIsValid] = getNodeData(nodeInternals.get(edge.source));\n                            const [targetNodeRect, targetHandleBounds, targetIsValid] = getNodeData(nodeInternals.get(edge.target));\n                            if (!sourceIsValid || !targetIsValid) {\n                                return null;\n                            }\n                            let edgeType = edge.type || 'default';\n                            if (!edgeTypes[edgeType]) {\n                                onError?.('011', errorMessages['error011'](edgeType));\n                                edgeType = 'default';\n                            }\n                            const EdgeComponent = edgeTypes[edgeType] || edgeTypes.default;\n                            // when connection type is loose we can define all handles as sources and connect source -> source\n                            const targetNodeHandles = connectionMode === ConnectionMode.Strict\n                                ? targetHandleBounds.target\n                                : (targetHandleBounds.target ?? []).concat(targetHandleBounds.source ?? []);\n                            const sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle);\n                            const targetHandle = getHandle(targetNodeHandles, edge.targetHandle);\n                            const sourcePosition = sourceHandle?.position || Position.Bottom;\n                            const targetPosition = targetHandle?.position || Position.Top;\n                            const isFocusable = !!(edge.focusable || (edgesFocusable && typeof edge.focusable === 'undefined'));\n                            const isUpdatable = typeof onEdgeUpdate !== 'undefined' &&\n                                (edge.updatable || (edgesUpdatable && typeof edge.updatable === 'undefined'));\n                            if (!sourceHandle || !targetHandle) {\n                                onError?.('008', errorMessages['error008'](sourceHandle, edge));\n                                return null;\n                            }\n                            const { sourceX, sourceY, targetX, targetY } = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition);\n                            return (jsx(EdgeComponent, { id: edge.id, className: cc([edge.className, noPanClassName]), type: edgeType, data: edge.data, selected: !!edge.selected, animated: !!edge.animated, hidden: !!edge.hidden, label: edge.label, labelStyle: edge.labelStyle, labelShowBg: edge.labelShowBg, labelBgStyle: edge.labelBgStyle, labelBgPadding: edge.labelBgPadding, labelBgBorderRadius: edge.labelBgBorderRadius, style: edge.style, source: edge.source, target: edge.target, sourceHandleId: edge.sourceHandle, targetHandleId: edge.targetHandle, markerEnd: edge.markerEnd, markerStart: edge.markerStart, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, elementsSelectable: elementsSelectable, onEdgeUpdate: onEdgeUpdate, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onClick: onEdgeClick, edgeUpdaterRadius: edgeUpdaterRadius, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, rfId: rfId, ariaLabel: edge.ariaLabel, isFocusable: isFocusable, isUpdatable: isUpdatable, pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined, interactionWidth: edge.interactionWidth }, edge.id));\n                        }) })] }, level))), children] }));\n};\nEdgeRenderer.displayName = 'EdgeRenderer';\nvar EdgeRenderer$1 = memo(EdgeRenderer);\n\nconst selector$3 = (s) => `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`;\nfunction Viewport({ children }) {\n    const transform = useStore(selector$3);\n    return (jsx(\"div\", { className: \"react-flow__viewport react-flow__container\", style: { transform }, children: children }));\n}\n\nfunction useOnInitHandler(onInit) {\n    const rfInstance = useReactFlow();\n    const isInitialized = useRef(false);\n    useEffect(() => {\n        if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n            setTimeout(() => onInit(rfInstance), 1);\n            isInitialized.current = true;\n        }\n    }, [onInit, rfInstance.viewportInitialized]);\n}\n\nconst oppositePosition = {\n    [Position.Left]: Position.Right,\n    [Position.Right]: Position.Left,\n    [Position.Top]: Position.Bottom,\n    [Position.Bottom]: Position.Top,\n};\nconst ConnectionLine = ({ nodeId, handleType, style, type = ConnectionLineType.Bezier, CustomComponent, connectionStatus, }) => {\n    const { fromNode, handleId, toX, toY, connectionMode } = useStore(useCallback((s) => ({\n        fromNode: s.nodeInternals.get(nodeId),\n        handleId: s.connectionHandleId,\n        toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\n        toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2],\n        connectionMode: s.connectionMode,\n    }), [nodeId]), shallow);\n    const fromHandleBounds = fromNode?.[internalsSymbol]?.handleBounds;\n    let handleBounds = fromHandleBounds?.[handleType];\n    if (connectionMode === ConnectionMode.Loose) {\n        handleBounds = handleBounds ? handleBounds : fromHandleBounds?.[handleType === 'source' ? 'target' : 'source'];\n    }\n    if (!fromNode || !handleBounds) {\n        return null;\n    }\n    const fromHandle = handleId ? handleBounds.find((d) => d.id === handleId) : handleBounds[0];\n    const fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : (fromNode.width ?? 0) / 2;\n    const fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : fromNode.height ?? 0;\n    const fromX = (fromNode.positionAbsolute?.x ?? 0) + fromHandleX;\n    const fromY = (fromNode.positionAbsolute?.y ?? 0) + fromHandleY;\n    const fromPosition = fromHandle?.position;\n    const toPosition = fromPosition ? oppositePosition[fromPosition] : null;\n    if (!fromPosition || !toPosition) {\n        return null;\n    }\n    if (CustomComponent) {\n        return (jsx(CustomComponent, { connectionLineType: type, connectionLineStyle: style, fromNode: fromNode, fromHandle: fromHandle, fromX: fromX, fromY: fromY, toX: toX, toY: toY, fromPosition: fromPosition, toPosition: toPosition, connectionStatus: connectionStatus }));\n    }\n    let dAttr = '';\n    const pathParams = {\n        sourceX: fromX,\n        sourceY: fromY,\n        sourcePosition: fromPosition,\n        targetX: toX,\n        targetY: toY,\n        targetPosition: toPosition,\n    };\n    if (type === ConnectionLineType.Bezier) {\n        // we assume the destination position is opposite to the source position\n        [dAttr] = getBezierPath(pathParams);\n    }\n    else if (type === ConnectionLineType.Step) {\n        [dAttr] = getSmoothStepPath({\n            ...pathParams,\n            borderRadius: 0,\n        });\n    }\n    else if (type === ConnectionLineType.SmoothStep) {\n        [dAttr] = getSmoothStepPath(pathParams);\n    }\n    else if (type === ConnectionLineType.SimpleBezier) {\n        [dAttr] = getSimpleBezierPath(pathParams);\n    }\n    else {\n        dAttr = `M${fromX},${fromY} ${toX},${toY}`;\n    }\n    return jsx(\"path\", { d: dAttr, fill: \"none\", className: \"react-flow__connection-path\", style: style });\n};\nConnectionLine.displayName = 'ConnectionLine';\nconst selector$2 = (s) => ({\n    nodeId: s.connectionNodeId,\n    handleType: s.connectionHandleType,\n    nodesConnectable: s.nodesConnectable,\n    connectionStatus: s.connectionStatus,\n    width: s.width,\n    height: s.height,\n});\nfunction ConnectionLineWrapper({ containerStyle, style, type, component }) {\n    const { nodeId, handleType, nodesConnectable, width, height, connectionStatus } = useStore(selector$2, shallow);\n    const isValid = !!(nodeId && handleType && width && nodesConnectable);\n    if (!isValid) {\n        return null;\n    }\n    return (jsx(\"svg\", { style: containerStyle, width: width, height: height, className: \"react-flow__edges react-flow__connectionline react-flow__container\", children: jsx(\"g\", { className: cc(['react-flow__connection', connectionStatus]), children: jsx(ConnectionLine, { nodeId: nodeId, handleType: handleType, style: style, type: type, CustomComponent: component, connectionStatus: connectionStatus }) }) }));\n}\n\nconst GraphView = ({ nodeTypes, edgeTypes, onMove, onMoveStart, onMoveEnd, onInit, onNodeClick, onEdgeClick, onNodeDoubleClick, onEdgeDoubleClick, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionLineType, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, selectionKeyCode, selectionOnDrag, selectionMode, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, deleteKeyCode, onlyRenderVisibleElements, elementsSelectable, selectNodesOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, defaultMarkerColor, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, edgeUpdaterRadius, onEdgeUpdateStart, onEdgeUpdateEnd, noDragClassName, noWheelClassName, noPanClassName, elevateEdgesOnSelect, disableKeyboardA11y, nodeOrigin, nodeExtent, rfId, }) => {\n    useOnInitHandler(onInit);\n    return (jsx(FlowRenderer$1, { onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, deleteKeyCode: deleteKeyCode, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, elementsSelectable: elementsSelectable, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, onSelectionContextMenu: onSelectionContextMenu, preventScrolling: preventScrolling, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y, children: jsxs(Viewport, { children: [jsx(EdgeRenderer$1, { edgeTypes: edgeTypes, onEdgeClick: onEdgeClick, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeUpdate: onEdgeUpdate, onlyRenderVisibleElements: onlyRenderVisibleElements, onEdgeContextMenu: onEdgeContextMenu, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noPanClassName: noPanClassName, elevateEdgesOnSelect: !!elevateEdgesOnSelect, disableKeyboardA11y: disableKeyboardA11y, rfId: rfId, children: jsx(ConnectionLineWrapper, { style: connectionLineStyle, type: connectionLineType, component: connectionLineComponent, containerStyle: connectionLineContainerStyle }) }), jsx(\"div\", { className: \"react-flow__edgelabel-renderer\" }), jsx(NodeRenderer$1, { nodeTypes: nodeTypes, onNodeClick: onNodeClick, onNodeDoubleClick: onNodeDoubleClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, selectNodesOnDrag: selectNodesOnDrag, onlyRenderVisibleElements: onlyRenderVisibleElements, noPanClassName: noPanClassName, noDragClassName: noDragClassName, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent, rfId: rfId })] }) }));\n};\nGraphView.displayName = 'GraphView';\nvar GraphView$1 = memo(GraphView);\n\nconst infiniteExtent = [\n    [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],\n    [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY],\n];\nconst initialState = {\n    rfId: '1',\n    width: 0,\n    height: 0,\n    transform: [0, 0, 1],\n    nodeInternals: new Map(),\n    edges: [],\n    onNodesChange: null,\n    onEdgesChange: null,\n    hasDefaultNodes: false,\n    hasDefaultEdges: false,\n    d3Zoom: null,\n    d3Selection: null,\n    d3ZoomHandler: undefined,\n    minZoom: 0.5,\n    maxZoom: 2,\n    translateExtent: infiniteExtent,\n    nodeExtent: infiniteExtent,\n    nodesSelectionActive: false,\n    userSelectionActive: false,\n    userSelectionRect: null,\n    connectionNodeId: null,\n    connectionHandleId: null,\n    connectionHandleType: 'source',\n    connectionPosition: { x: 0, y: 0 },\n    connectionStatus: null,\n    connectionMode: ConnectionMode.Strict,\n    domNode: null,\n    paneDragging: false,\n    noPanClassName: 'nopan',\n    nodeOrigin: [0, 0],\n    snapGrid: [15, 15],\n    snapToGrid: false,\n    nodesDraggable: true,\n    nodesConnectable: true,\n    nodesFocusable: true,\n    edgesFocusable: true,\n    edgesUpdatable: true,\n    elementsSelectable: true,\n    elevateNodesOnSelect: true,\n    fitViewOnInit: false,\n    fitViewOnInitDone: false,\n    fitViewOnInitOptions: undefined,\n    multiSelectionActive: false,\n    connectionStartHandle: null,\n    connectionEndHandle: null,\n    connectionClickStartHandle: null,\n    connectOnClick: true,\n    ariaLiveMessage: '',\n    autoPanOnConnect: true,\n    autoPanOnNodeDrag: true,\n    connectionRadius: 20,\n    onError: devWarn,\n    isValidConnection: undefined,\n};\n\nconst createRFStore = () => createStore((set, get) => ({\n    ...initialState,\n    setNodes: (nodes) => {\n        const { nodeInternals, nodeOrigin, elevateNodesOnSelect } = get();\n        set({ nodeInternals: createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) });\n    },\n    getNodes: () => {\n        return Array.from(get().nodeInternals.values());\n    },\n    setEdges: (edges) => {\n        const { defaultEdgeOptions = {} } = get();\n        set({ edges: edges.map((e) => ({ ...defaultEdgeOptions, ...e })) });\n    },\n    setDefaultNodesAndEdges: (nodes, edges) => {\n        const hasDefaultNodes = typeof nodes !== 'undefined';\n        const hasDefaultEdges = typeof edges !== 'undefined';\n        const nodeInternals = hasDefaultNodes\n            ? createNodeInternals(nodes, new Map(), get().nodeOrigin, get().elevateNodesOnSelect)\n            : new Map();\n        const nextEdges = hasDefaultEdges ? edges : [];\n        set({ nodeInternals, edges: nextEdges, hasDefaultNodes, hasDefaultEdges });\n    },\n    updateNodeDimensions: (updates) => {\n        const { onNodesChange, nodeInternals, fitViewOnInit, fitViewOnInitDone, fitViewOnInitOptions, domNode, nodeOrigin, } = get();\n        const viewportNode = domNode?.querySelector('.react-flow__viewport');\n        if (!viewportNode) {\n            return;\n        }\n        const style = window.getComputedStyle(viewportNode);\n        const { m22: zoom } = new window.DOMMatrixReadOnly(style.transform);\n        const changes = updates.reduce((res, update) => {\n            const node = nodeInternals.get(update.id);\n            if (node) {\n                const dimensions = getDimensions(update.nodeElement);\n                const doUpdate = !!(dimensions.width &&\n                    dimensions.height &&\n                    (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\n                if (doUpdate) {\n                    nodeInternals.set(node.id, {\n                        ...node,\n                        [internalsSymbol]: {\n                            ...node[internalsSymbol],\n                            handleBounds: {\n                                source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\n                                target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin),\n                            },\n                        },\n                        ...dimensions,\n                    });\n                    res.push({\n                        id: node.id,\n                        type: 'dimensions',\n                        dimensions,\n                    });\n                }\n            }\n            return res;\n        }, []);\n        updateAbsoluteNodePositions(nodeInternals, nodeOrigin);\n        const nextFitViewOnInitDone = fitViewOnInitDone ||\n            (fitViewOnInit && !fitViewOnInitDone && fitView(get, { initial: true, ...fitViewOnInitOptions }));\n        set({ nodeInternals: new Map(nodeInternals), fitViewOnInitDone: nextFitViewOnInitDone });\n        if (changes?.length > 0) {\n            onNodesChange?.(changes);\n        }\n    },\n    updateNodePositions: (nodeDragItems, positionChanged = true, dragging = false) => {\n        const { triggerNodeChanges } = get();\n        const changes = nodeDragItems.map((node) => {\n            const change = {\n                id: node.id,\n                type: 'position',\n                dragging,\n            };\n            if (positionChanged) {\n                change.positionAbsolute = node.positionAbsolute;\n                change.position = node.position;\n            }\n            return change;\n        });\n        triggerNodeChanges(changes);\n    },\n    triggerNodeChanges: (changes) => {\n        const { onNodesChange, nodeInternals, hasDefaultNodes, nodeOrigin, getNodes, elevateNodesOnSelect } = get();\n        if (changes?.length) {\n            if (hasDefaultNodes) {\n                const nodes = applyNodeChanges(changes, getNodes());\n                const nextNodeInternals = createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect);\n                set({ nodeInternals: nextNodeInternals });\n            }\n            onNodesChange?.(changes);\n        }\n    },\n    addSelectedNodes: (selectedNodeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedNodes;\n        let changedEdges = null;\n        if (multiSelectionActive) {\n            changedNodes = selectedNodeIds.map((nodeId) => createSelectionChange(nodeId, true));\n        }\n        else {\n            changedNodes = getSelectionChanges(getNodes(), selectedNodeIds);\n            changedEdges = getSelectionChanges(edges, []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    addSelectedEdges: (selectedEdgeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedEdges;\n        let changedNodes = null;\n        if (multiSelectionActive) {\n            changedEdges = selectedEdgeIds.map((edgeId) => createSelectionChange(edgeId, true));\n        }\n        else {\n            changedEdges = getSelectionChanges(edges, selectedEdgeIds);\n            changedNodes = getSelectionChanges(getNodes(), []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    unselectNodesAndEdges: ({ nodes, edges } = {}) => {\n        const { edges: storeEdges, getNodes } = get();\n        const nodesToUnselect = nodes ? nodes : getNodes();\n        const edgesToUnselect = edges ? edges : storeEdges;\n        const changedNodes = nodesToUnselect.map((n) => {\n            n.selected = false;\n            return createSelectionChange(n.id, false);\n        });\n        const changedEdges = edgesToUnselect.map((edge) => createSelectionChange(edge.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    setMinZoom: (minZoom) => {\n        const { d3Zoom, maxZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ minZoom });\n    },\n    setMaxZoom: (maxZoom) => {\n        const { d3Zoom, minZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ maxZoom });\n    },\n    setTranslateExtent: (translateExtent) => {\n        get().d3Zoom?.translateExtent(translateExtent);\n        set({ translateExtent });\n    },\n    resetSelectedElements: () => {\n        const { edges, getNodes } = get();\n        const nodes = getNodes();\n        const nodesToUnselect = nodes\n            .filter((e) => e.selected)\n            .map((n) => createSelectionChange(n.id, false));\n        const edgesToUnselect = edges\n            .filter((e) => e.selected)\n            .map((e) => createSelectionChange(e.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes: nodesToUnselect,\n            changedEdges: edgesToUnselect,\n            get,\n            set,\n        });\n    },\n    setNodeExtent: (nodeExtent) => {\n        const { nodeInternals } = get();\n        nodeInternals.forEach((node) => {\n            node.positionAbsolute = clampPosition(node.position, nodeExtent);\n        });\n        set({\n            nodeExtent,\n            nodeInternals: new Map(nodeInternals),\n        });\n    },\n    panBy: (delta) => {\n        const { transform, width, height, d3Zoom, d3Selection, translateExtent } = get();\n        if (!d3Zoom || !d3Selection || (!delta.x && !delta.y)) {\n            return false;\n        }\n        const nextTransform = zoomIdentity.translate(transform[0] + delta.x, transform[1] + delta.y).scale(transform[2]);\n        const extent = [\n            [0, 0],\n            [width, height],\n        ];\n        const constrainedTransform = d3Zoom?.constrain()(nextTransform, extent, translateExtent);\n        d3Zoom.transform(d3Selection, constrainedTransform);\n        const transformChanged = transform[0] !== constrainedTransform.x ||\n            transform[1] !== constrainedTransform.y ||\n            transform[2] !== constrainedTransform.k;\n        return transformChanged;\n    },\n    cancelConnection: () => set({\n        connectionNodeId: initialState.connectionNodeId,\n        connectionHandleId: initialState.connectionHandleId,\n        connectionHandleType: initialState.connectionHandleType,\n        connectionStatus: initialState.connectionStatus,\n        connectionStartHandle: initialState.connectionStartHandle,\n        connectionEndHandle: initialState.connectionEndHandle,\n    }),\n    reset: () => set({ ...initialState }),\n}));\n\nconst ReactFlowProvider = ({ children }) => {\n    const storeRef = useRef(null);\n    if (!storeRef.current) {\n        storeRef.current = createRFStore();\n    }\n    return jsx(Provider$1, { value: storeRef.current, children: children });\n};\nReactFlowProvider.displayName = 'ReactFlowProvider';\n\nconst Wrapper = ({ children }) => {\n    const isWrapped = useContext(StoreContext);\n    if (isWrapped) {\n        // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n        return jsx(Fragment, { children: children });\n    }\n    return jsx(ReactFlowProvider, { children: children });\n};\nWrapper.displayName = 'ReactFlowWrapper';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\n    const typesKeysRef = useRef(null);\n    const typesParsed = useMemo(() => {\n        if (process.env.NODE_ENV === 'development') {\n            const typeKeys = Object.keys(nodeOrEdgeTypes);\n            if (shallow(typesKeysRef.current, typeKeys)) {\n                devWarn('002', errorMessages['error002']());\n            }\n            typesKeysRef.current = typeKeys;\n        }\n        return createTypes(nodeOrEdgeTypes);\n    }, [nodeOrEdgeTypes]);\n    return typesParsed;\n}\n\nconst defaultNodeTypes = {\n    input: InputNode$1,\n    default: DefaultNode$1,\n    output: OutputNode$1,\n    group: GroupNode,\n};\nconst defaultEdgeTypes = {\n    default: BezierEdge,\n    straight: StraightEdge,\n    step: StepEdge,\n    smoothstep: SmoothStepEdge,\n    simplebezier: SimpleBezierEdge,\n};\nconst initNodeOrigin = [0, 0];\nconst initSnapGrid = [15, 15];\nconst initDefaultViewport = { x: 0, y: 0, zoom: 1 };\nconst wrapperStyle = {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    position: 'relative',\n    zIndex: 0,\n};\nconst ReactFlow = forwardRef(({ nodes, edges, defaultNodes, defaultEdges, className, nodeTypes = defaultNodeTypes, edgeTypes = defaultEdgeTypes, onNodeClick, onEdgeClick, onInit, onMove, onMoveStart, onMoveEnd, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onNodeDoubleClick, onNodeDragStart, onNodeDrag, onNodeDragStop, onNodesDelete, onEdgesDelete, onSelectionChange, onSelectionDragStart, onSelectionDrag, onSelectionDragStop, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionMode = ConnectionMode.Strict, connectionLineType = ConnectionLineType.Bezier, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, deleteKeyCode = 'Backspace', selectionKeyCode = 'Shift', selectionOnDrag = false, selectionMode = SelectionMode.Full, panActivationKeyCode = 'Space', multiSelectionKeyCode = 'Meta', zoomActivationKeyCode = 'Meta', snapToGrid = false, snapGrid = initSnapGrid, onlyRenderVisibleElements = false, selectNodesOnDrag = true, nodesDraggable, nodesConnectable, nodesFocusable, nodeOrigin = initNodeOrigin, edgesFocusable, edgesUpdatable, elementsSelectable, defaultViewport = initDefaultViewport, minZoom = 0.5, maxZoom = 2, translateExtent = infiniteExtent, preventScrolling = true, nodeExtent, defaultMarkerColor = '#b1b1b7', zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, panOnDrag = true, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, children, onEdgeUpdate, onEdgeContextMenu, onEdgeDoubleClick, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeUpdateStart, onEdgeUpdateEnd, edgeUpdaterRadius = 10, onNodesChange, onEdgesChange, noDragClassName = 'nodrag', noWheelClassName = 'nowheel', noPanClassName = 'nopan', fitView = false, fitViewOptions, connectOnClick = true, attributionPosition, proOptions, defaultEdgeOptions, elevateNodesOnSelect = true, elevateEdgesOnSelect = false, disableKeyboardA11y = false, autoPanOnConnect = true, autoPanOnNodeDrag = true, connectionRadius = 20, isValidConnection, onError, style, id, ...rest }, ref) => {\n    const nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\n    const edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\n    const rfId = id || '1';\n    return (jsx(\"div\", { ...rest, style: { ...style, ...wrapperStyle }, ref: ref, className: cc(['react-flow', className]), \"data-testid\": \"rf__wrapper\", id: id, children: jsxs(Wrapper, { children: [jsx(GraphView$1, { onInit: onInit, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onNodeClick: onNodeClick, onEdgeClick: onEdgeClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, onNodeDoubleClick: onNodeDoubleClick, nodeTypes: nodeTypesWrapped, edgeTypes: edgeTypesWrapped, connectionLineType: connectionLineType, connectionLineStyle: connectionLineStyle, connectionLineComponent: connectionLineComponent, connectionLineContainerStyle: connectionLineContainerStyle, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, deleteKeyCode: deleteKeyCode, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, onlyRenderVisibleElements: onlyRenderVisibleElements, selectNodesOnDrag: selectNodesOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, preventScrolling: preventScrolling, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneScroll: onPaneScroll, onPaneContextMenu: onPaneContextMenu, onSelectionContextMenu: onSelectionContextMenu, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onEdgeUpdate: onEdgeUpdate, onEdgeContextMenu: onEdgeContextMenu, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, elevateEdgesOnSelect: elevateEdgesOnSelect, rfId: rfId, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent }), jsx(StoreUpdater, { nodes: nodes, edges: edges, defaultNodes: defaultNodes, defaultEdges: defaultEdges, onConnect: onConnect, onConnectStart: onConnectStart, onConnectEnd: onConnectEnd, onClickConnectStart: onClickConnectStart, onClickConnectEnd: onClickConnectEnd, nodesDraggable: nodesDraggable, nodesConnectable: nodesConnectable, nodesFocusable: nodesFocusable, edgesFocusable: edgesFocusable, edgesUpdatable: edgesUpdatable, elementsSelectable: elementsSelectable, elevateNodesOnSelect: elevateNodesOnSelect, minZoom: minZoom, maxZoom: maxZoom, nodeExtent: nodeExtent, onNodesChange: onNodesChange, onEdgesChange: onEdgesChange, snapToGrid: snapToGrid, snapGrid: snapGrid, connectionMode: connectionMode, translateExtent: translateExtent, connectOnClick: connectOnClick, defaultEdgeOptions: defaultEdgeOptions, fitView: fitView, fitViewOptions: fitViewOptions, onNodesDelete: onNodesDelete, onEdgesDelete: onEdgesDelete, onNodeDragStart: onNodeDragStart, onNodeDrag: onNodeDrag, onNodeDragStop: onNodeDragStop, onSelectionDrag: onSelectionDrag, onSelectionDragStart: onSelectionDragStart, onSelectionDragStop: onSelectionDragStop, noPanClassName: noPanClassName, nodeOrigin: nodeOrigin, rfId: rfId, autoPanOnConnect: autoPanOnConnect, autoPanOnNodeDrag: autoPanOnNodeDrag, onError: onError, connectionRadius: connectionRadius, isValidConnection: isValidConnection }), jsx(Wrapper$1, { onSelectionChange: onSelectionChange }), children, jsx(Attribution, { proOptions: proOptions, position: attributionPosition }), jsx(A11yDescriptions, { rfId: rfId, disableKeyboardA11y: disableKeyboardA11y })] }) }));\n});\nReactFlow.displayName = 'ReactFlow';\n\nconst selector$1 = (s) => s.domNode?.querySelector('.react-flow__edgelabel-renderer');\nfunction EdgeLabelRenderer({ children }) {\n    const edgeLabelRenderer = useStore(selector$1);\n    if (!edgeLabelRenderer) {\n        return null;\n    }\n    return createPortal(children, edgeLabelRenderer);\n}\n\nfunction useUpdateNodeInternals() {\n    const store = useStoreApi();\n    return useCallback((id) => {\n        const { domNode, updateNodeDimensions } = store.getState();\n        const updateIds = Array.isArray(id) ? id : [id];\n        const updates = updateIds.reduce((res, updateId) => {\n            const nodeElement = domNode?.querySelector(`.react-flow__node[data-id=\"${updateId}\"]`);\n            if (nodeElement) {\n                res.push({ id: updateId, nodeElement, forceUpdate: true });\n            }\n            return res;\n        }, []);\n        requestAnimationFrame(() => updateNodeDimensions(updates));\n    }, []);\n}\n\nconst nodesSelector = (state) => state.getNodes();\nfunction useNodes() {\n    const nodes = useStore(nodesSelector, shallow);\n    return nodes;\n}\n\nconst edgesSelector = (state) => state.edges;\nfunction useEdges() {\n    const edges = useStore(edgesSelector, shallow);\n    return edges;\n}\n\nconst viewportSelector = (state) => ({\n    x: state.transform[0],\n    y: state.transform[1],\n    zoom: state.transform[2],\n});\nfunction useViewport() {\n    const viewport = useStore(viewportSelector, shallow);\n    return viewport;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createUseItemsState(applyChanges) {\n    return (initialItems) => {\n        const [items, setItems] = useState(initialItems);\n        const onItemsChange = useCallback((changes) => setItems((items) => applyChanges(changes, items)), []);\n        return [items, setItems, onItemsChange];\n    };\n}\nconst useNodesState = createUseItemsState(applyNodeChanges);\nconst useEdgesState = createUseItemsState(applyEdgeChanges);\n\nfunction useOnViewportChange({ onStart, onChange, onEnd }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        store.setState({ onViewportChangeStart: onStart });\n    }, [onStart]);\n    useEffect(() => {\n        store.setState({ onViewportChange: onChange });\n    }, [onChange]);\n    useEffect(() => {\n        store.setState({ onViewportChangeEnd: onEnd });\n    }, [onEnd]);\n}\n\nfunction useOnSelectionChange({ onChange }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        store.setState({ onSelectionChange: onChange });\n    }, [onChange]);\n}\n\nconst selector = (options) => (s) => {\n    if (s.nodeInternals.size === 0) {\n        return false;\n    }\n    return s\n        .getNodes()\n        .filter((n) => (options.includeHiddenNodes ? true : !n.hidden))\n        .every((n) => n[internalsSymbol]?.handleBounds !== undefined);\n};\nconst defaultOptions = {\n    includeHiddenNodes: false,\n};\nfunction useNodesInitialized(options = defaultOptions) {\n    const initialized = useStore(selector(options));\n    return initialized;\n}\n\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeLabelRenderer, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SelectionMode, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, clamp, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getNodePositionWithOrigin, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, internalsSymbol, isEdge, isNode, rectToBox, updateEdge, useEdges, useEdgesState, useGetPointerPosition, useKeyPress, useNodeId, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };\n"],"names":["StoreContext","createContext","Provider$1","Provider","errorMessages","error001","error002","error003","nodeType","error004","error005","error006","error007","id","error009","type","error008","sourceHandle","edge","targetHandle","error010","error011","edgeType","zustandErrorMessage","useStore","selector","equalityFn","store","useContext","Error","useStoreApi","useMemo","getState","setState","subscribe","destroy","selector$g","s","userSelectionActive","Panel","position","children","className","style","rest","pointerEvents","positionClasses","split","jsx","Attribution","proOptions","hideAttribution","href","target","rel","EdgeText$1","memo","x","y","label","labelStyle","labelShowBg","labelBgStyle","labelBgPadding","labelBgBorderRadius","edgeRef","useRef","edgeTextBbox","setEdgeTextBbox","useState","width","height","edgeTextClasses","useEffect","current","textBbox","getBBox","jsxs","transform","visibility","rx","ry","dy","ref","getDimensions","node","offsetWidth","offsetHeight","clamp","val","min","max","Math","clampPosition","extent","calcAutoPanVelocity","value","abs","calcAutoPan","pos","bounds","getHostForElement","element","getRootNode","window","document","getBoundsOfBoxes","box1","box2","x2","y2","rectToBox","boxToRect","nodeToRect","positionAbsolute","getOverlappingArea","rectA","rectB","xOverlap","yOverlap","ceil","isRectObject","obj","isNumeric","n","isNaN","isFinite","internalsSymbol","Symbol","for","elementSelectionKeys","devWarn","message","isInputDOMNode","event","kbEvent","isReactKeyboardEvent","nativeEvent","composedPath","includes","nodeName","hasAttribute","closest","isMouseEvent","getEventPosition","isMouseTriggered","evtX","clientX","touches","evtY","clientY","left","top","BaseEdge","path","labelX","labelY","markerEnd","markerStart","interactionWidth","Fragment","d","fill","strokeOpacity","strokeWidth","displayName","getMouseHandler$1","handler","undefined","edges","find","e","getEdgeCenter","sourceX","sourceY","targetX","targetY","xOffset","centerX","yOffset","getBezierEdgeCenter","sourceControlX","sourceControlY","targetControlX","targetControlY","centerY","ConnectionMode","PanOnScrollMode","SelectionMode","ConnectionLineType","MarkerType","Position","getControl","x1","y1","Left","Right","getSimpleBezierPath","sourcePosition","Bottom","targetPosition","Top","offsetX","offsetY","SimpleBezierEdge","handleDirections","getDirection","source","distance","a","b","sqrt","pow","getSmoothStepPath","borderRadius","offset","points","center","sourceDir","targetDir","sourceGapped","targetGapped","dir","dirAccessor","currDir","defaultCenterX","defaultCenterY","defaultOffsetX","defaultOffsetY","verticalSplit","horizontalSplit","sourceTarget","targetSource","dirAccessorOpposite","isSameDir","sourceGtTargetOppo","sourceLtTargetOppo","getPoints","reduce","res","p","i","segment","length","c","size","bendSize","xDir","getBend","SmoothStepEdge","pathOptions","StepEdge","props","StraightEdge","getStraightPath","calculateControlOffset","curvature","getControlWithCurvature","getBezierPath","BezierEdge","NodeIdContext","Consumer","getEdgeId","getMarkerId","marker","rfId","Object","keys","sort","map","key","join","pointToRendererPoint","tx","ty","tScale","snapToGrid","snapX","snapY","round","rendererPointToPoint","getNodePositionWithOrigin","nodeOrigin","getRectOfNodes","nodes","box","currBox","Infinity","getNodesInside","nodeInternals","rect","partially","excludeNonSelectableNodes","paneRect","visibleNodes","forEach","selectable","hidden","nodeRect","overlappingArea","dragging","push","getConnectedEdges","nodeIds","filter","getTransformForBounds","minZoom","maxZoom","padding","xZoom","yZoom","zoom","clampedZoom","getD3Transition","selection","duration","transition","getHandles","handleBounds","currentHandle","h","nodeId","nullConnection","isValidHandle","handle","connectionMode","fromNodeId","fromHandleId","fromType","isValidConnection","doc","isTarget","handleDomNode","querySelector","handleBelow","elementFromPoint","handleToCheck","classList","contains","result","isValid","connection","endHandle","handleType","getHandleType","handleNodeId","getAttribute","handleId","connectable","connectableEnd","Strict","edgeUpdaterType","resetRecentHandle","remove","getConnectionStatus","isInsideConnectionRadius","isHandleValid","connectionStatus","handlePointerDown","onConnect","onEdgeUpdateEnd","domNode","autoPanOnConnect","connectionRadius","onConnectStart","panBy","getNodes","cancelConnection","closestHandle","autoPanId","clickedHandle","containerBounds","getBoundingClientRect","prevActiveHandle","connectionPosition","autoPanStarted","handleLookup","sourceHandles","targetHandles","getHandleLookup","autoPan","xMovement","yMovement","requestAnimationFrame","onPointerMove","handles","closestHandles","minDistance","getClosestHandle","connectionEndHandle","add","toggle","onPointerUp","onConnectEnd","cancelAnimationFrame","removeEventListener","connectionNodeId","connectionHandleId","connectionHandleType","connectionStartHandle","addEventListener","alwaysValid","selector$f","connectOnClick","noPanClassName","Handle","forwardRef","isConnectable","isConnectableStart","isConnectableEnd","onMouseDown","onTouchStart","connecting","clickConnecting","state","startHandle","connectionClickStartHandle","clickHandle","connectingSelector","onError","onConnectExtended","params","defaultEdgeOptions","onConnectAction","hasDefaultEdges","edgeParams","setEdges","some","el","connectionExists","concat","addEdge","onPointerDown","button","connectablestart","connectableend","connectionindicator","onClick","onClickConnectStart","onClickConnectEnd","isValidConnectionStore","isValidConnectionHandler","Handle$1","DefaultNode","data","DefaultNode$1","InputNode","InputNode$1","OutputNode","OutputNode$1","GroupNode","selector$e","selectedNodes","selected","selectedEdges","selectId","areEqual","SelectionListener","onSelectionChange","changeSelector","Wrapper$1","storeHasSelectionChange","selector$d","setNodes","setDefaultNodesAndEdges","setMinZoom","setMaxZoom","setTranslateExtent","setNodeExtent","reset","useStoreUpdater","setStoreState","useDirectStoreUpdater","StoreUpdater","defaultNodes","defaultEdges","nodesDraggable","nodesConnectable","nodesFocusable","edgesFocusable","edgesUpdatable","elevateNodesOnSelect","nodeExtent","onNodesChange","onEdgesChange","elementsSelectable","snapGrid","translateExtent","fitView","fitViewOptions","onNodesDelete","onEdgesDelete","onNodeDrag","onNodeDragStart","onNodeDragStop","onSelectionDrag","onSelectionDragStart","onSelectionDragStop","autoPanOnNodeDrag","edgesWithDefaults","display","ariaLiveStyle","margin","border","overflow","clip","clipPath","ARIA_NODE_DESC_KEY","ARIA_EDGE_DESC_KEY","ARIA_LIVE_MESSAGE","selector$c","ariaLiveMessage","AriaLiveMessage","A11yDescriptions","disableKeyboardA11y","shiftX","shift","shiftY","EdgeUpdaterClassName","EdgeAnchor","radius","onMouseEnter","onMouseOut","cx","cy","r","stroke","alwaysValidConnection","wrapEdge","EdgeComponent","EdgeWrapper","onEdgeDoubleClick","animated","sourceHandleId","targetHandleId","onContextMenu","onMouseMove","onMouseLeave","edgeUpdaterRadius","onEdgeUpdate","onEdgeUpdateStart","ariaLabel","isFocusable","isUpdatable","updateHover","setUpdateHover","updating","setUpdating","markerStartUrl","markerEndUrl","onEdgeDoubleClickHandler","onEdgeContextMenu","onEdgeMouseEnter","onEdgeMouseMove","onEdgeMouseLeave","handleEdgeUpdater","isSourceHandle","evt","onEdgeUpdaterMouseEnter","onEdgeUpdaterMouseOut","inactive","addSelectedEdges","nodesSelectionActive","onDoubleClick","onKeyDown","unselectNodesAndEdges","blur","tabIndex","role","createEdgeTypes","edgeTypes","default","straight","bezier","step","smoothstep","simplebezier","k","getHandlePosition","getHandle","getNodeData","isParentSelected","parentNode","get","hasSelector","nodeRef","matches","parentElement","getDragItems","mousePos","Array","from","values","draggable","delta","calcNextPosition","nextPosition","currentExtent","parent","parentX","parentY","parentPosition","getEventHandlerParams","dragItems","extentedDragItems","getHandleBounds","nodeElement","querySelectorAll","handlesArray","nodeBounds","nodeOffset","getMouseHandler","handleNodeClick","unselect","addSelectedNodes","multiSelectionActive","wrapSelectionDragFunc","selectionFunc","_","useDrag","disabled","noDragClassName","handleSelector","isSelectable","selectNodesOnDrag","setDragging","lastPos","mousePosition","dragEvent","getPointerPosition","useCallback","sourceEvent","pointerPos","xSnapped","ySnapped","useGetPointerPosition","updateNodes","updateNodePositions","hasChange","updatedPos","onDrag","currentNode","dragHandler","on","onStart","onStop","call","useUpdateNodePositions","xVelo","yVelo","factor","isShiftPressed","positionDiffX","positionDiffY","arrowKeyDiffs","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","wrapNode","NodeComponent","NodeWrapper","xPos","yPos","xPosOrigin","yPosOrigin","isDraggable","resizeObserver","dragHandle","zIndex","isParent","initialized","prevSourcePosition","prevTargetPosition","prevType","hasPointerEvents","updatePositions","onMouseEnterHandler","onMouseMoveHandler","onMouseLeaveHandler","onContextMenuHandler","onDoubleClickHandler","currNode","observe","unobserve","typeChanged","sourcePosChanged","targetPosChanged","updateNodeDimensions","forceUpdate","prototype","hasOwnProperty","replace","toLowerCase","shiftKey","createNodeTypes","nodeTypes","input","output","group","useKeyPress","keyCode","options","keyPressed","setKeyPressed","modifierPressed","pressedKeys","Set","keyCodes","keysToWatch","isArray","kc","keysFlat","item","downHandler","ctrlKey","metaKey","keyOrCode","useKeyOrCode","code","isMatchingKey","preventDefault","upHandler","clear","delete","resetHandler","isUp","every","has","eventCode","calculateXYZPosition","parentNodePosition","z","updateAbsoluteNodePositions","parentNodes","createNodeInternals","nextNodeInternals","Map","selectedNodeZ","currInternals","internals","defineProperty","enumerable","set","d3Zoom","d3Selection","fitViewOnInitDone","fitViewOnInit","isInitialFitView","initial","isVisible","includeHiddenNodes","optionNode","nodesInitialized","nextTransform","scale","handleControlledNodeSelectionChange","nodeChanges","change","handleControlledEdgeSelectionChange","edgeChanges","updateNodesAndEdgesSelections","changedNodes","changedEdges","hasDefaultNodes","noop","initialViewportHelper","zoomIn","zoomOut","zoomTo","getZoom","setViewport","getViewport","setCenter","fitBounds","project","viewportInitialized","selector$b","useViewportHelper","scaleBy","zoomLevel","scaleTo","nextZoom","useReactFlow","viewportHelper","getNode","getEdges","getEdge","payload","nextNodes","nextEdges","addNodes","addEdges","toObject","viewport","deleteElements","nodesDeleted","edgesDeleted","edgeIds","nodesToRemove","parentHit","deletable","deletableEdges","initialHitEdges","connectedEdges","edgesToRemove","edgeIdsToRemove","getNodeRect","nodeOrRect","isRect","getIntersectingNodes","currNodeRect","isNodeIntersecting","area","containerStyle","eventToFlowTransform","eventViewport","isWrappedWithClass","isRightClickPan","panOnDrag","usedButton","selector$a","d3ZoomHandler","ZoomPane","onMove","onMoveStart","onMoveEnd","onPaneContextMenu","zoomOnScroll","zoomOnPinch","panOnScroll","panOnScrollSpeed","panOnScrollMode","Free","zoomOnDoubleClick","defaultViewport","zoomActivationKeyCode","preventScrolling","noWheelClassName","timerId","isZoomingOrPanning","zoomedWithRightMouseButton","zoomPane","prevTransform","zoomActivationKeyPressed","mouseButton","rendererNode","updateDimensions","ResizeObserver","useResizeHandler","bbox","d3ZoomInstance","scaleExtent","updatedTransform","constrainedTransform","constrain","this","passive","stopImmediatePropagation","currentZoom","property","point","pinchDelta","deltaY","deltaMode","deltaNormalize","deltaX","Vertical","Horizontal","translateBy","onViewportChangeStart","paneDragging","flowTransform","onViewportChange","onViewportChangeEnd","prevViewport","clearTimeout","setTimeout","zoomScroll","pinchZoom","buttonAllowed","selector$9","userSelectionRect","UserSelection","handleParentExpand","updateItem","extendWidth","extendHeight","xDiff","yDiff","applyChanges","changes","elements","initElements","currentChanges","currentChange","expandParent","dimensions","updateStyle","resizing","applyNodeChanges","createSelectionChange","getSelectionChanges","items","selectedIds","willBeSelected","wrapHandler","containerRef","selector$8","Pane","isSelecting","selectionMode","Full","onSelectionStart","onSelectionEnd","onPaneClick","onPaneScroll","onPaneMouseEnter","onPaneMouseMove","onPaneMouseLeave","container","prevSelectedNodesCount","prevSelectedEdgesCount","resetUserSelection","resetSelectedElements","onWheel","hasActiveSelection","startX","startY","nextUserSelectRect","Partial","selectedEdgeIds","selectedNodeIds","onMouseUp","selector$7","transformString","NodesSelection$1","onSelectionContextMenu","focus","preventScroll","selector$6","FlowRenderer","deleteKeyCode","selectionKeyCode","selectionOnDrag","multiSelectionKeyCode","panActivationKeyCode","_panOnDrag","selectionKeyPressed","deleteKeyPressed","multiSelectionKeyPressed","useGlobalKeyHandler","FlowRenderer$1","selector$5","NodeRenderer","onlyRenderVisible","onlyRenderVisibleElements","resizeObserverRef","observer","entries","updates","entry","disconnect","focusable","clampedPosition","posX","posY","posOrigin","origin","getPositionWithOrigin","onNodeClick","onNodeMouseEnter","onNodeMouseMove","onNodeMouseLeave","onNodeContextMenu","onNodeDoubleClick","NodeRenderer$1","defaultEdgeTree","level","isMaxLevel","useVisibleEdges","elevateEdgesOnSelect","maxLevel","levelLookup","tree","hasZIndex","edgeTree","groupEdgesByZLevel","sourceNode","targetNode","sourcePos","targetPos","sourceWidth","sourceHeight","targetWidth","targetHeight","edgeBox","viewBox","isEdgeVisible","MarkerSymbols","Arrow","color","strokeLinecap","strokeLinejoin","ArrowClosed","Marker","markerUnits","orient","useMarkerSymbol","markerWidth","markerHeight","refX","refY","MarkerDefinitions","defaultColor","markers","ids","markerId","localeCompare","markerSelector","m","MarkerDefinitions$1","selector$4","EdgeRenderer","defaultMarkerColor","onEdgeClick","sourceNodeRect","sourceHandleBounds","sourceIsValid","targetNodeRect","targetHandleBounds","targetIsValid","targetNodeHandles","updatable","sourceHandlePos","targetHandlePos","getEdgePositions","EdgeRenderer$1","selector$3","Viewport","oppositePosition","ConnectionLine","Bezier","CustomComponent","fromNode","toX","toY","fromHandleBounds","Loose","fromHandle","fromHandleX","fromHandleY","fromX","fromY","fromPosition","toPosition","connectionLineType","connectionLineStyle","dAttr","pathParams","Step","SmoothStep","SimpleBezier","selector$2","ConnectionLineWrapper","component","GraphView","onInit","connectionLineComponent","connectionLineContainerStyle","rfInstance","isInitialized","useOnInitHandler","GraphView$1","infiniteExtent","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","initialState","fitViewOnInitOptions","ReactFlowProvider","storeRef","viewportNode","getComputedStyle","m22","DOMMatrixReadOnly","update","nextFitViewOnInitDone","nodeDragItems","positionChanged","triggerNodeChanges","edgeId","storeEdges","edgesToUnselect","Wrapper","useNodeOrEdgeTypes","nodeOrEdgeTypes","createTypes","defaultNodeTypes","defaultEdgeTypes","initNodeOrigin","initSnapGrid","initDefaultViewport","wrapperStyle","ReactFlow","attributionPosition","nodeTypesWrapped","edgeTypesWrapped","selector$1","EdgeLabelRenderer","edgeLabelRenderer","createPortal","createUseItemsState","initialItems","setItems","onItemsChange","useNodesState","useEdgesState"],"sourceRoot":""}